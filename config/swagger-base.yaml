swagger: "2.0"
info:
  version: "0.0.1"
  title: Featherbone data service
  license: 
    name: GPLv3
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: data
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /favicon.ico:
    x-swagger-router-controller: data
    get:
      description: Placeholder for chrome. Returns nothing for now
      # used as the method name of the controller
      operationId: favicon
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FaviconResponse"
  '/settings/{name}':
    x-swagger-router-controller: data
    get:
      summary: Get settings by name
      operationId: doGetSettings
      parameters:
        - name: name
          in: path
          description: The name of the settings to retrieve
          type: string
      responses:
        '200':
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Settings'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      summary: Save new settings
      operationId: doSaveSattings
      parameters:
        - name: name
          in: path
          description: The name of the settings
          type: string
      responses:
        '200':
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/RequestResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  FaviconResponse:
    required:
      - message
    properties:
      message:
        type: string
  RequestResponse:
    required:
      - message
    properties:
      message:
        type: string
  Settings:
    description: Generic definition for settings
    properties:
      value:
        description: Surrogate key
        type: object
