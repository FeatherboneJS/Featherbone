{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.2",
        "title": "Featherbone data service",
        "description": "REST data service for featherbone based applications.",
        "license": {
            "name": "Affero GPLv3",
            "url": "http://www.gnu.org/licenses/agpl.txt"
        }
    },
    "servers": [
        {
            "url": "http://localhost:10001"
        }
    ],
    "tags": [
        {
            "name": "feather",
            "description": "Data class specifications"
        },
        {
            "name": "module",
            "description": "Javascript client code module"
        },
        {
            "name": "settings",
            "description": "Application settings"
        },
        {
            "name": "workbook",
            "description": "Workbook UI layout configuration"
        },
        {
            "name": "object",
            "description": "Abstract object class from which all feathers will inherit"
        },
        {
            "name": "table-spec",
            "description": "Table definitions"
        },
        {
            "name": "role",
            "description": "User authorization role"
        },
        {
            "name": "log",
            "description": "Logs all data changes"
        },
        {
            "name": "form",
            "description": "Form definitions"
        },
        {
            "name": "relation-widget",
            "description": "Relation widget definitions"
        },
        {
            "name": "comment",
            "description": "Note"
        },
        {
            "name": "document",
            "description": "Base document class"
        },
        {
            "name": "kind",
            "description": "Base class for physical types"
        },
        {
            "name": "unit",
            "description": "Unit of measure"
        },
        {
            "name": "currency-unit",
            "description": "Currency Unit of measure"
        },
        {
            "name": "currency",
            "description": "Currency"
        },
        {
            "name": "currency-conversion",
            "description": "Currency Conversion rates"
        },
        {
            "name": "base-currency",
            "description": "Base currency effectivity"
        },
        {
            "name": "country",
            "description": "Country"
        },
        {
            "name": "state",
            "description": "State"
        },
        {
            "name": "social-network",
            "description": "Social media networks"
        },
        {
            "name": "honorific",
            "description": "Honorific"
        },
        {
            "name": "contact",
            "description": "Information about a person"
        },
        {
            "name": "element",
            "description": "Unit of measure"
        },
        {
            "name": "container",
            "description": "Instance of a kind"
        },
        {
            "name": "node",
            "description": "Base class for hiearchy support"
        },
        {
            "name": "node-balance",
            "description": "Base class for hiearchy support"
        },
        {
            "name": "period",
            "description": "Base class for bucketed time period support"
        },
        {
            "name": "node-period-balance",
            "description": "Quantity of objects in node per period"
        },
        {
            "name": "action",
            "description": "Abstract action"
        },
        {
            "name": "request",
            "description": "Action request"
        },
        {
            "name": "transaction",
            "description": "Action history"
        },
        {
            "name": "conversion",
            "description": "Conversion rates"
        },
        {
            "name": "activity",
            "description": "Activity"
        },
        {
            "name": "task",
            "description": "User task"
        },
        {
            "name": "location",
            "description": "Physical locations"
        },
        {
            "name": "location-balance",
            "description": "Physical location balance"
        },
        {
            "name": "site",
            "description": "Physical site"
        },
        {
            "name": "item-category",
            "description": "Item category"
        },
        {
            "name": "item",
            "description": "Information about a product or service"
        },
        {
            "name": "test-types",
            "description": "Test all types and formats"
        },
        {
            "name": "terms",
            "description": "Payment terms"
        },
        {
            "name": "ship-method",
            "description": "Shipping methods"
        },
        {
            "name": "tax-type",
            "description": "Tax types"
        },
        {
            "name": "bill-entity",
            "description": "Billing entity"
        },
        {
            "name": "bill-order",
            "description": "Abstract billing documnet"
        },
        {
            "name": "order-line",
            "description": "Order line"
        },
        {
            "name": "ship-order",
            "description": "Shippable order"
        },
        {
            "name": "opportunity",
            "description": "Opportunity"
        },
        {
            "name": "lead",
            "description": "A sales contact"
        },
        {
            "name": "ledger-account",
            "description": "Ledger accounts"
        },
        {
            "name": "account-map-type",
            "description": "Account map types for journal entries"
        },
        {
            "name": "account-map",
            "description": "General ledger account map for journals"
        },
        {
            "name": "fiscal-year",
            "description": "Fiscal year periods"
        },
        {
            "name": "fiscal-period",
            "description": "Fiscal periods"
        },
        {
            "name": "ledger-transaction",
            "description": "Abstract ledger transactions"
        },
        {
            "name": "journal",
            "description": "Journal entries"
        },
        {
            "name": "general-journal",
            "description": "General journal entries"
        },
        {
            "name": "general-ledger-transaction",
            "description": "General ledger entries"
        },
        {
            "name": "trial-balance",
            "description": "Amount of currency in ledger accounts per period"
        },
        {
            "name": "bill-subledger",
            "description": "Subledger for billing records"
        },
        {
            "name": "customer",
            "description": "Customer"
        },
        {
            "name": "receivable",
            "description": "Receivable subledger"
        },
        {
            "name": "receivable-line",
            "description": "Receivable line"
        },
        {
            "name": "invoice",
            "description": "Invoice"
        },
        {
            "name": "credit-memo",
            "description": "Credit memo"
        },
        {
            "name": "accounts-receivable",
            "description": "Accounts receivable balance"
        },
        {
            "name": "accounts-receivable-journal",
            "description": "Accounts receivable journal"
        },
        {
            "name": "sales-order",
            "description": "Sales order"
        },
        {
            "name": "sales-journal",
            "description": "Sales journal"
        },
        {
            "name": "sales-return-journal",
            "description": "Sales return journal"
        },
        {
            "name": "amazon-product",
            "description": "Amazon products"
        },
        {
            "name": "frame",
            "description": "Bicycle frames"
        },
        {
            "name": "seat",
            "description": "Bicycle seats"
        },
        {
            "name": "bicycle",
            "description": "Bicycles"
        },
        {
            "name": "vendor",
            "description": "Vendor"
        },
        {
            "name": "accounts-payable",
            "description": "Accounts payable subledger"
        },
        {
            "name": "accounts-payable-journal",
            "description": "Accounts payable journal"
        },
        {
            "name": "inventory-transaction",
            "description": "Inventory transactions"
        },
        {
            "name": "inventory-journal",
            "description": "Inventory journal"
        },
        {
            "name": "wheel",
            "description": "Bicycle wheel"
        }
    ],
    "paths": {
        "/settings/{name}": {
            "get": {
                "summary": "Get settings by name",
                "operationId": "getSettings",
                "tags": [
                    "settings"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the settings to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "settings"
                ],
                "summary": "Save new settings",
                "operationId": "saveSettings",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the settings",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Settings"
                },
                "responses": {
                    "204": {
                        "description": "Expected response to a valid request"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feather/{name}": {
            "get": {
                "summary": "Get feather by name",
                "operationId": "getFeather",
                "tags": [
                    "feather"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the feather to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feather"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "feather"
                ],
                "summary": "Save feather",
                "operationId": "saveFeather",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the feather",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feather"
                },
                "responses": {
                    "204": {
                        "description": "Expected response to a valid request"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "feather"
                ],
                "summary": "Delete feather",
                "operationId": "deleteFeather",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Delete a feather",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/module/": {
            "get": {
                "summary": "Get javascript modules",
                "operationId": "getModules",
                "tags": [
                    "module"
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Module"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workbook/{name}": {
            "get": {
                "summary": "Get workbook by name",
                "operationId": "getWorkbook",
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the workbook to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workbook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workbook not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "workbook"
                ],
                "summary": "Save Workbook",
                "operationId": "saveWorkbook",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the workbook",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Workbook"
                },
                "responses": {
                    "204": {
                        "description": "Expected response to a valid request"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workbook"
                ],
                "summary": "Delete workbook",
                "operationId": "deleteWorkbook",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Delete a workbook",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workbooks/": {
            "get": {
                "summary": "Get all workbooks",
                "operationId": "getWorkbooks",
                "tags": [
                    "workbooks"
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workbook"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/object/{id}": {
            "get": {
                "tags": [
                    "object"
                ],
                "summary": "Info for a specific Object",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Object to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "object"
                ],
                "summary": "Update an existing Object",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Object to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "object"
                ],
                "summary": "Delete a Object",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Object to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/objects": {
            "get": {
                "tags": [
                    "object"
                ],
                "description": "Object data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "object"
                ],
                "summary": "Add a new Object to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Object"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/table-spec/{id}": {
            "get": {
                "tags": [
                    "table-spec"
                ],
                "summary": "Info for a specific Table Spec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Table Spec to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableSpec"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "table-spec"
                ],
                "summary": "Update an existing Table Spec",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Table Spec to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "table-spec"
                ],
                "summary": "Delete a Table Spec",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Table Spec to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/table-specs": {
            "get": {
                "tags": [
                    "table-spec"
                ],
                "description": "TableSpec data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Table Specs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableSpec"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "table-spec"
                ],
                "summary": "Add a new Table Spec to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TableSpec"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/role/{id}": {
            "get": {
                "tags": [
                    "role"
                ],
                "summary": "Info for a specific Role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "role"
                ],
                "summary": "Update an existing Role",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "role"
                ],
                "summary": "Delete a Role",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/roles": {
            "get": {
                "tags": [
                    "role"
                ],
                "description": "Role data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "role"
                ],
                "summary": "Add a new Role to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Role"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/log/{id}": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "Info for a specific Log",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Log to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "log"
                ],
                "summary": "Update an existing Log",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Log to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "log"
                ],
                "summary": "Delete a Log",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Log to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/logs": {
            "get": {
                "tags": [
                    "log"
                ],
                "description": "Log data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "log"
                ],
                "summary": "Add a new Log to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Log"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/form/{id}": {
            "get": {
                "tags": [
                    "form"
                ],
                "summary": "Info for a specific Form",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Form to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "form"
                ],
                "summary": "Update an existing Form",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Form to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "form"
                ],
                "summary": "Delete a Form",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Form to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/forms": {
            "get": {
                "tags": [
                    "form"
                ],
                "description": "Form data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "form"
                ],
                "summary": "Add a new Form to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Form"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/relation-widget/{id}": {
            "get": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Info for a specific Relation Widget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Relation Widget to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelationWidget"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Update an existing Relation Widget",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Relation Widget to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Delete a Relation Widget",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Relation Widget to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/relation-widgets": {
            "get": {
                "tags": [
                    "relation-widget"
                ],
                "description": "RelationWidget data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Relation Widgets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelationWidget"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Add a new Relation Widget to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/RelationWidget"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/comment/{id}": {
            "get": {
                "tags": [
                    "comment"
                ],
                "summary": "Info for a specific Comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Comment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "comment"
                ],
                "summary": "Update an existing Comment",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Comment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "comment"
                ],
                "summary": "Delete a Comment",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Comment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/document/{id}": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "Info for a specific Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Document to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "document"
                ],
                "summary": "Update an existing Document",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Document to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "document"
                ],
                "summary": "Delete a Document",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Document to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/documents": {
            "get": {
                "tags": [
                    "document"
                ],
                "description": "Document data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Documents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "document"
                ],
                "summary": "Add a new Document to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Document"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/kind/{id}": {
            "get": {
                "tags": [
                    "kind"
                ],
                "summary": "Info for a specific Kind",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Kind to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "kind"
                ],
                "summary": "Update an existing Kind",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Kind to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "kind"
                ],
                "summary": "Delete a Kind",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Kind to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/kinds": {
            "get": {
                "tags": [
                    "kind"
                ],
                "description": "Kind data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Kinds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "kind"
                ],
                "summary": "Add a new Kind to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Kind"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/unit/{id}": {
            "get": {
                "tags": [
                    "unit"
                ],
                "summary": "Info for a specific Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "unit"
                ],
                "summary": "Update an existing Unit",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "unit"
                ],
                "summary": "Delete a Unit",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/units": {
            "get": {
                "tags": [
                    "unit"
                ],
                "description": "Unit data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Units",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "unit"
                ],
                "summary": "Add a new Unit to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Unit"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-unit/{id}": {
            "get": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Info for a specific Currency Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyUnit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Update an existing Currency Unit",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Delete a Currency Unit",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-units": {
            "get": {
                "tags": [
                    "currency-unit"
                ],
                "description": "CurrencyUnit data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Currency Units",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyUnit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Add a new Currency Unit to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CurrencyUnit"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency/{id}": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Info for a specific Currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "currency"
                ],
                "summary": "Update an existing Currency",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "currency"
                ],
                "summary": "Delete a Currency",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currencies": {
            "get": {
                "tags": [
                    "currency"
                ],
                "description": "Currency data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Currencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "currency"
                ],
                "summary": "Add a new Currency to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Currency"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-conversion/{id}": {
            "get": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Info for a specific Currency Conversion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyConversion"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Update an existing Currency Conversion",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Delete a Currency Conversion",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-conversions": {
            "get": {
                "tags": [
                    "currency-conversion"
                ],
                "description": "CurrencyConversion data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Currency Conversions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyConversion"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Add a new Currency Conversion to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CurrencyConversion"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/base-currency/{id}": {
            "get": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Info for a specific Base Currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Base Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseCurrency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Update an existing Base Currency",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Base Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Delete a Base Currency",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Base Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/base-currencies": {
            "get": {
                "tags": [
                    "base-currency"
                ],
                "description": "BaseCurrency data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Base Currencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseCurrency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Add a new Base Currency to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/BaseCurrency"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/country/{id}": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Info for a specific Country",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Country to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "country"
                ],
                "summary": "Update an existing Country",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Country to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "country"
                ],
                "summary": "Delete a Country",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Country to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/countries": {
            "get": {
                "tags": [
                    "country"
                ],
                "description": "Country data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Countries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "country"
                ],
                "summary": "Add a new Country to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Country"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/state/{id}": {
            "get": {
                "tags": [
                    "state"
                ],
                "summary": "Info for a specific State",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the State to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "state"
                ],
                "summary": "Update an existing State",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the State to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "state"
                ],
                "summary": "Delete a State",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the State to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/states": {
            "get": {
                "tags": [
                    "state"
                ],
                "description": "State data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of States",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "state"
                ],
                "summary": "Add a new State to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/State"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/social-network/{id}": {
            "get": {
                "tags": [
                    "social-network"
                ],
                "summary": "Info for a specific Social Network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Social Network to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialNetwork"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "social-network"
                ],
                "summary": "Update an existing Social Network",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Social Network to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "social-network"
                ],
                "summary": "Delete a Social Network",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Social Network to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/social-networks": {
            "get": {
                "tags": [
                    "social-network"
                ],
                "description": "SocialNetwork data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Social Networks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialNetwork"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "social-network"
                ],
                "summary": "Add a new Social Network to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SocialNetwork"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/honorific/{id}": {
            "get": {
                "tags": [
                    "honorific"
                ],
                "summary": "Info for a specific Honorific",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Honorific to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Honorific"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "honorific"
                ],
                "summary": "Update an existing Honorific",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Honorific to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "honorific"
                ],
                "summary": "Delete a Honorific",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Honorific to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/honorifics": {
            "get": {
                "tags": [
                    "honorific"
                ],
                "description": "Honorific data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Honorifics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Honorific"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "honorific"
                ],
                "summary": "Add a new Honorific to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Honorific"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/contact/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Info for a specific Contact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "contact"
                ],
                "summary": "Update an existing Contact",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "contact"
                ],
                "summary": "Delete a Contact",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/contacts": {
            "get": {
                "tags": [
                    "contact"
                ],
                "description": "Contact data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Add a new Contact to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Contact"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/element/{id}": {
            "get": {
                "tags": [
                    "element"
                ],
                "summary": "Info for a specific Element",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Element to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "element"
                ],
                "summary": "Update an existing Element",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Element to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "element"
                ],
                "summary": "Delete a Element",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Element to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/elements": {
            "get": {
                "tags": [
                    "element"
                ],
                "description": "Element data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Elements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "element"
                ],
                "summary": "Add a new Element to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Element"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/container/{id}": {
            "get": {
                "tags": [
                    "container"
                ],
                "summary": "Info for a specific Container",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Container to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Container"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "container"
                ],
                "summary": "Update an existing Container",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Container to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "container"
                ],
                "summary": "Delete a Container",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Container to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/containers": {
            "get": {
                "tags": [
                    "container"
                ],
                "description": "Container data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Containers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Container"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "container"
                ],
                "summary": "Add a new Container to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Container"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/node/{id}": {
            "get": {
                "tags": [
                    "node"
                ],
                "summary": "Info for a specific Node",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "node"
                ],
                "summary": "Update an existing Node",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "node"
                ],
                "summary": "Delete a Node",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/nodes": {
            "get": {
                "tags": [
                    "node"
                ],
                "description": "Node data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Nodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "node"
                ],
                "summary": "Add a new Node to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Node"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/node-balance/{id}": {
            "get": {
                "tags": [
                    "node-balance"
                ],
                "summary": "Info for a specific Node Balance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "node-balance"
                ],
                "summary": "Update an existing Node Balance",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "node-balance"
                ],
                "summary": "Delete a Node Balance",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/node-balances": {
            "get": {
                "tags": [
                    "node-balance"
                ],
                "description": "NodeBalance data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Node Balances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "node-balance"
                ],
                "summary": "Add a new Node Balance to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/NodeBalance"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/period/{id}": {
            "get": {
                "tags": [
                    "period"
                ],
                "summary": "Info for a specific Period",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Period to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Period"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "period"
                ],
                "summary": "Update an existing Period",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Period to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "period"
                ],
                "summary": "Delete a Period",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Period to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/periods": {
            "get": {
                "tags": [
                    "period"
                ],
                "description": "Period data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Periods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Period"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "period"
                ],
                "summary": "Add a new Period to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Period"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/node-period-balance/{id}": {
            "get": {
                "tags": [
                    "node-period-balance"
                ],
                "summary": "Info for a specific Node Period Balance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node Period Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodePeriodBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "node-period-balance"
                ],
                "summary": "Update an existing Node Period Balance",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node Period Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "node-period-balance"
                ],
                "summary": "Delete a Node Period Balance",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Node Period Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/node-period-balance": {
            "get": {
                "tags": [
                    "node-period-balance"
                ],
                "description": "NodePeriodBalance data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Node Period Balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodePeriodBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "node-period-balance"
                ],
                "summary": "Add a new Node Period Balance to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/NodePeriodBalance"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/action/{id}": {
            "get": {
                "tags": [
                    "action"
                ],
                "summary": "Info for a specific Action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Action to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "action"
                ],
                "summary": "Update an existing Action",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Action to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "action"
                ],
                "summary": "Delete a Action",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Action to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/action": {
            "get": {
                "tags": [
                    "action"
                ],
                "description": "Action data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "action"
                ],
                "summary": "Add a new Action to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Action"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/request/{id}": {
            "get": {
                "tags": [
                    "request"
                ],
                "summary": "Info for a specific Request",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Request to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "request"
                ],
                "summary": "Update an existing Request",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Request to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "request"
                ],
                "summary": "Delete a Request",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Request to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/requests": {
            "get": {
                "tags": [
                    "request"
                ],
                "description": "Request data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "request"
                ],
                "summary": "Add a new Request to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Request"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/transaction/{id}": {
            "get": {
                "tags": [
                    "transaction"
                ],
                "summary": "Info for a specific Transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "transaction"
                ],
                "summary": "Update an existing Transaction",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "transaction"
                ],
                "summary": "Delete a Transaction",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/transactions": {
            "get": {
                "tags": [
                    "transaction"
                ],
                "description": "Transaction data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "transaction"
                ],
                "summary": "Add a new Transaction to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Transaction"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/conversion/{id}": {
            "get": {
                "tags": [
                    "conversion"
                ],
                "summary": "Info for a specific Conversion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversion"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "conversion"
                ],
                "summary": "Update an existing Conversion",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "conversion"
                ],
                "summary": "Delete a Conversion",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/conversions": {
            "get": {
                "tags": [
                    "conversion"
                ],
                "description": "Conversion data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Conversions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversion"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "conversion"
                ],
                "summary": "Add a new Conversion to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Conversion"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/activity/{id}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Info for a specific Activity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Activity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "activity"
                ],
                "summary": "Update an existing Activity",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Activity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "activity"
                ],
                "summary": "Delete a Activity",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Activity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/activities": {
            "get": {
                "tags": [
                    "activity"
                ],
                "description": "Activity data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Activities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Add a new Activity to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Activity"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/task/{id}": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Info for a specific Task",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "task"
                ],
                "summary": "Update an existing Task",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "task"
                ],
                "summary": "Delete a Task",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/tasks": {
            "get": {
                "tags": [
                    "task"
                ],
                "description": "Task data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "task"
                ],
                "summary": "Add a new Task to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Task"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/location/{id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Info for a specific Location",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Location to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "location"
                ],
                "summary": "Update an existing Location",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Location to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "location"
                ],
                "summary": "Delete a Location",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Location to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/locations": {
            "get": {
                "tags": [
                    "location"
                ],
                "description": "Location data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "location"
                ],
                "summary": "Add a new Location to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Location"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/location-balance/{id}": {
            "get": {
                "tags": [
                    "location-balance"
                ],
                "summary": "Info for a specific Location Balance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Location Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "location-balance"
                ],
                "summary": "Update an existing Location Balance",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Location Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "location-balance"
                ],
                "summary": "Delete a Location Balance",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Location Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/location-balance": {
            "get": {
                "tags": [
                    "location-balance"
                ],
                "description": "LocationBalance data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Location Balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "location-balance"
                ],
                "summary": "Add a new Location Balance to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/LocationBalance"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/site/{id}": {
            "get": {
                "tags": [
                    "site"
                ],
                "summary": "Info for a specific Site",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Site to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "site"
                ],
                "summary": "Update an existing Site",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Site to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "site"
                ],
                "summary": "Delete a Site",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Site to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sites": {
            "get": {
                "tags": [
                    "site"
                ],
                "description": "Site data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Sites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "site"
                ],
                "summary": "Add a new Site to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Site"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/item-category/{id}": {
            "get": {
                "tags": [
                    "item-category"
                ],
                "summary": "Info for a specific Item Category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Item Category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "item-category"
                ],
                "summary": "Update an existing Item Category",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Item Category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "item-category"
                ],
                "summary": "Delete a Item Category",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Item Category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/item-categories": {
            "get": {
                "tags": [
                    "item-category"
                ],
                "description": "ItemCategory data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Item Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "item-category"
                ],
                "summary": "Add a new Item Category to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ItemCategory"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/item/{id}": {
            "get": {
                "tags": [
                    "item"
                ],
                "summary": "Info for a specific Item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Item to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "item"
                ],
                "summary": "Update an existing Item",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Item to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "item"
                ],
                "summary": "Delete a Item",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Item to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/items": {
            "get": {
                "tags": [
                    "item"
                ],
                "description": "Item data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "item"
                ],
                "summary": "Add a new Item to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Item"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/test-types/{id}": {
            "get": {
                "tags": [
                    "test-types"
                ],
                "summary": "Info for a specific Test Types",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Test Types to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestTypes"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "test-types"
                ],
                "summary": "Update an existing Test Types",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Test Types to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "test-types"
                ],
                "summary": "Delete a Test Types",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Test Types to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/terms/{id}": {
            "get": {
                "tags": [
                    "terms"
                ],
                "summary": "Info for a specific Terms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Terms to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Terms"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "terms"
                ],
                "summary": "Update an existing Terms",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Terms to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "terms"
                ],
                "summary": "Delete a Terms",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Terms to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/termses": {
            "get": {
                "tags": [
                    "terms"
                ],
                "description": "Terms data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Termses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Terms"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "terms"
                ],
                "summary": "Add a new Terms to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Terms"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ship-method/{id}": {
            "get": {
                "tags": [
                    "ship-method"
                ],
                "summary": "Info for a specific Ship Method",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ship Method to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipMethod"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ship-method"
                ],
                "summary": "Update an existing Ship Method",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ship Method to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ship-method"
                ],
                "summary": "Delete a Ship Method",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ship Method to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ship-methods": {
            "get": {
                "tags": [
                    "ship-method"
                ],
                "description": "ShipMethod data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Ship Methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipMethod"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ship-method"
                ],
                "summary": "Add a new Ship Method to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ShipMethod"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/tax-type/{id}": {
            "get": {
                "tags": [
                    "tax-type"
                ],
                "summary": "Info for a specific Tax Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Tax Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxType"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "tax-type"
                ],
                "summary": "Update an existing Tax Type",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Tax Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tax-type"
                ],
                "summary": "Delete a Tax Type",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Tax Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/tax-types": {
            "get": {
                "tags": [
                    "tax-type"
                ],
                "description": "TaxType data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Tax Types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxType"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tax-type"
                ],
                "summary": "Add a new Tax Type to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TaxType"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bill-entity/{id}": {
            "get": {
                "tags": [
                    "bill-entity"
                ],
                "summary": "Info for a specific Bill Entity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Entity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillEntity"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "bill-entity"
                ],
                "summary": "Update an existing Bill Entity",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Entity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bill-entity"
                ],
                "summary": "Delete a Bill Entity",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Entity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bill-entities": {
            "get": {
                "tags": [
                    "bill-entity"
                ],
                "description": "BillEntity data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Bill Entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillEntity"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bill-entity"
                ],
                "summary": "Add a new Bill Entity to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/BillEntity"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bill-order/{id}": {
            "get": {
                "tags": [
                    "bill-order"
                ],
                "summary": "Info for a specific Bill Order",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "bill-order"
                ],
                "summary": "Update an existing Bill Order",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bill-order"
                ],
                "summary": "Delete a Bill Order",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bill-orders": {
            "get": {
                "tags": [
                    "bill-order"
                ],
                "description": "BillOrder data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Bill Orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bill-order"
                ],
                "summary": "Add a new Bill Order to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/BillOrder"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/order-line/{id}": {
            "get": {
                "tags": [
                    "order-line"
                ],
                "summary": "Info for a specific Order Line",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Order Line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderLine"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "order-line"
                ],
                "summary": "Update an existing Order Line",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Order Line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "order-line"
                ],
                "summary": "Delete a Order Line",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Order Line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ship-order/{id}": {
            "get": {
                "tags": [
                    "ship-order"
                ],
                "summary": "Info for a specific Ship Order",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ship Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ship-order"
                ],
                "summary": "Update an existing Ship Order",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ship Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ship-order"
                ],
                "summary": "Delete a Ship Order",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ship Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ship-orders": {
            "get": {
                "tags": [
                    "ship-order"
                ],
                "description": "ShipOrder data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Ship Orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ship-order"
                ],
                "summary": "Add a new Ship Order to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ShipOrder"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/opportunity/{id}": {
            "get": {
                "tags": [
                    "opportunity"
                ],
                "summary": "Info for a specific Opportunity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Opportunity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Opportunity"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "opportunity"
                ],
                "summary": "Update an existing Opportunity",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Opportunity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "opportunity"
                ],
                "summary": "Delete a Opportunity",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Opportunity to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/opportunities": {
            "get": {
                "tags": [
                    "opportunity"
                ],
                "description": "Opportunity data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Opportunities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Opportunity"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "opportunity"
                ],
                "summary": "Add a new Opportunity to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Opportunity"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/lead/{id}": {
            "get": {
                "tags": [
                    "lead"
                ],
                "summary": "Info for a specific Lead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Lead to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "lead"
                ],
                "summary": "Update an existing Lead",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Lead to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "lead"
                ],
                "summary": "Delete a Lead",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Lead to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/leads": {
            "get": {
                "tags": [
                    "lead"
                ],
                "description": "Lead data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Leads",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "lead"
                ],
                "summary": "Add a new Lead to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Lead"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ledger-account/{id}": {
            "get": {
                "tags": [
                    "ledger-account"
                ],
                "summary": "Info for a specific Ledger Account",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ledger Account to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerAccount"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ledger-account"
                ],
                "summary": "Update an existing Ledger Account",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ledger Account to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger-account"
                ],
                "summary": "Delete a Ledger Account",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ledger Account to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ledger-accounts": {
            "get": {
                "tags": [
                    "ledger-account"
                ],
                "description": "LedgerAccount data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Ledger Accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerAccount"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ledger-account"
                ],
                "summary": "Add a new Ledger Account to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/LedgerAccount"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/account-map-type/{id}": {
            "get": {
                "tags": [
                    "account-map-type"
                ],
                "summary": "Info for a specific Account Map Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account Map Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMapType"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "account-map-type"
                ],
                "summary": "Update an existing Account Map Type",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account Map Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "account-map-type"
                ],
                "summary": "Delete a Account Map Type",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account Map Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/account-map-types": {
            "get": {
                "tags": [
                    "account-map-type"
                ],
                "description": "AccountMapType data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Account Map Types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMapType"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "account-map-type"
                ],
                "summary": "Add a new Account Map Type to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountMapType"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/account-map/{id}": {
            "get": {
                "tags": [
                    "account-map"
                ],
                "summary": "Info for a specific Account Map",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account Map to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMap"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "account-map"
                ],
                "summary": "Update an existing Account Map",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account Map to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "account-map"
                ],
                "summary": "Delete a Account Map",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account Map to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/account-maps": {
            "get": {
                "tags": [
                    "account-map"
                ],
                "description": "AccountMap data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Account Maps",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMap"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "account-map"
                ],
                "summary": "Add a new Account Map to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountMap"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/fiscal-year/{id}": {
            "get": {
                "tags": [
                    "fiscal-year"
                ],
                "summary": "Info for a specific Fiscal Year",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Fiscal Year to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYear"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "fiscal-year"
                ],
                "summary": "Update an existing Fiscal Year",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Fiscal Year to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "fiscal-year"
                ],
                "summary": "Delete a Fiscal Year",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Fiscal Year to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/fiscal-years": {
            "get": {
                "tags": [
                    "fiscal-year"
                ],
                "description": "FiscalYear data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Fiscal Years",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYear"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "fiscal-year"
                ],
                "summary": "Add a new Fiscal Year to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FiscalYear"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/fiscal-period/{id}": {
            "get": {
                "tags": [
                    "fiscal-period"
                ],
                "summary": "Info for a specific Fiscal Period",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Fiscal Period to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalPeriod"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "fiscal-period"
                ],
                "summary": "Update an existing Fiscal Period",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Fiscal Period to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "fiscal-period"
                ],
                "summary": "Delete a Fiscal Period",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Fiscal Period to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/fiscal-periods": {
            "get": {
                "tags": [
                    "fiscal-period"
                ],
                "description": "FiscalPeriod data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Fiscal Periods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalPeriod"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "fiscal-period"
                ],
                "summary": "Add a new Fiscal Period to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FiscalPeriod"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ledger-transaction/{id}": {
            "get": {
                "tags": [
                    "ledger-transaction"
                ],
                "summary": "Info for a specific Ledger Transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ledger Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerTransaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ledger-transaction"
                ],
                "summary": "Update an existing Ledger Transaction",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ledger Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger-transaction"
                ],
                "summary": "Delete a Ledger Transaction",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Ledger Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/ledger-transactions": {
            "get": {
                "tags": [
                    "ledger-transaction"
                ],
                "description": "LedgerTransaction data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Ledger Transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerTransaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ledger-transaction"
                ],
                "summary": "Add a new Ledger Transaction to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/LedgerTransaction"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/journal/{id}": {
            "get": {
                "tags": [
                    "journal"
                ],
                "summary": "Info for a specific Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Journal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "journal"
                ],
                "summary": "Update an existing Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "journal"
                ],
                "summary": "Delete a Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/journals": {
            "get": {
                "tags": [
                    "journal"
                ],
                "description": "Journal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Journals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Journal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal"
                ],
                "summary": "Add a new Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Journal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/general-journal/{id}": {
            "get": {
                "tags": [
                    "general-journal"
                ],
                "summary": "Info for a specific General Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the General Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "general-journal"
                ],
                "summary": "Update an existing General Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the General Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "general-journal"
                ],
                "summary": "Delete a General Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the General Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/general-journals": {
            "get": {
                "tags": [
                    "general-journal"
                ],
                "description": "GeneralJournal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of General Journals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "general-journal"
                ],
                "summary": "Add a new General Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GeneralJournal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/general-ledger-transaction/{id}": {
            "get": {
                "tags": [
                    "general-ledger-transaction"
                ],
                "summary": "Info for a specific General Ledger Transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the General Ledger Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralLedgerTransaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "general-ledger-transaction"
                ],
                "summary": "Update an existing General Ledger Transaction",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the General Ledger Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "general-ledger-transaction"
                ],
                "summary": "Delete a General Ledger Transaction",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the General Ledger Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/general-ledger-transactions": {
            "get": {
                "tags": [
                    "general-ledger-transaction"
                ],
                "description": "GeneralLedgerTransaction data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of General Ledger Transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralLedgerTransaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "general-ledger-transaction"
                ],
                "summary": "Add a new General Ledger Transaction to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GeneralLedgerTransaction"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/trial-balance/{id}": {
            "get": {
                "tags": [
                    "trial-balance"
                ],
                "summary": "Info for a specific Trial Balance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Trial Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrialBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "trial-balance"
                ],
                "summary": "Update an existing Trial Balance",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Trial Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "trial-balance"
                ],
                "summary": "Delete a Trial Balance",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Trial Balance to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/trial-balances": {
            "get": {
                "tags": [
                    "trial-balance"
                ],
                "description": "TrialBalance data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Trial Balances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrialBalance"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "trial-balance"
                ],
                "summary": "Add a new Trial Balance to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TrialBalance"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bill-subledger/{id}": {
            "get": {
                "tags": [
                    "bill-subledger"
                ],
                "summary": "Info for a specific Bill Subledger",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Subledger to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillSubledger"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "bill-subledger"
                ],
                "summary": "Update an existing Bill Subledger",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Subledger to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bill-subledger"
                ],
                "summary": "Delete a Bill Subledger",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bill Subledger to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bill-subledgers": {
            "get": {
                "tags": [
                    "bill-subledger"
                ],
                "description": "BillSubledger data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Bill Subledgers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillSubledger"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bill-subledger"
                ],
                "summary": "Add a new Bill Subledger to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/BillSubledger"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/customer/{id}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Info for a specific Customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Customer to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "customer"
                ],
                "summary": "Update an existing Customer",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Customer to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customer"
                ],
                "summary": "Delete a Customer",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Customer to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/customers": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Customer data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Add a new Customer to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Customer"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/receivable/{id}": {
            "get": {
                "tags": [
                    "receivable"
                ],
                "summary": "Info for a specific Receivable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Receivable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receivable"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "receivable"
                ],
                "summary": "Update an existing Receivable",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Receivable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "receivable"
                ],
                "summary": "Delete a Receivable",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Receivable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/receivables": {
            "get": {
                "tags": [
                    "receivable"
                ],
                "description": "Receivable data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Receivables",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receivable"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "receivable"
                ],
                "summary": "Add a new Receivable to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Receivable"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/receivable-line/{id}": {
            "get": {
                "tags": [
                    "receivable-line"
                ],
                "summary": "Info for a specific Receivable Line",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Receivable Line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceivableLine"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "receivable-line"
                ],
                "summary": "Update an existing Receivable Line",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Receivable Line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "receivable-line"
                ],
                "summary": "Delete a Receivable Line",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Receivable Line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/invoice/{id}": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Info for a specific Invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Invoice to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "invoice"
                ],
                "summary": "Update an existing Invoice",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Invoice to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "invoice"
                ],
                "summary": "Delete a Invoice",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Invoice to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/invoices": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "description": "Invoice data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "invoice"
                ],
                "summary": "Add a new Invoice to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Invoice"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/credit-memo/{id}": {
            "get": {
                "tags": [
                    "credit-memo"
                ],
                "summary": "Info for a specific Credit Memo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Credit Memo to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditMemo"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "credit-memo"
                ],
                "summary": "Update an existing Credit Memo",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Credit Memo to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "credit-memo"
                ],
                "summary": "Delete a Credit Memo",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Credit Memo to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/credit-memos": {
            "get": {
                "tags": [
                    "credit-memo"
                ],
                "description": "CreditMemo data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Credit Memos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditMemo"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "credit-memo"
                ],
                "summary": "Add a new Credit Memo to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreditMemo"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-receivable/{id}": {
            "get": {
                "tags": [
                    "accounts-receivable"
                ],
                "summary": "Info for a specific Accounts Receivable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Receivable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsReceivable"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "accounts-receivable"
                ],
                "summary": "Update an existing Accounts Receivable",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Receivable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "accounts-receivable"
                ],
                "summary": "Delete a Accounts Receivable",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Receivable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-receivable": {
            "get": {
                "tags": [
                    "accounts-receivable"
                ],
                "description": "AccountsReceivable data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Accounts Receivable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsReceivable"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accounts-receivable"
                ],
                "summary": "Add a new Accounts Receivable to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountsReceivable"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-receivable-journal/{id}": {
            "get": {
                "tags": [
                    "accounts-receivable-journal"
                ],
                "summary": "Info for a specific Accounts Receivable Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Receivable Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsReceivableJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "accounts-receivable-journal"
                ],
                "summary": "Update an existing Accounts Receivable Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Receivable Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "accounts-receivable-journal"
                ],
                "summary": "Delete a Accounts Receivable Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Receivable Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-receivable-journal": {
            "get": {
                "tags": [
                    "accounts-receivable-journal"
                ],
                "description": "AccountsReceivableJournal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Accounts Receivable Journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsReceivableJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accounts-receivable-journal"
                ],
                "summary": "Add a new Accounts Receivable Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountsReceivableJournal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales-order/{id}": {
            "get": {
                "tags": [
                    "sales-order"
                ],
                "summary": "Info for a specific Sales Order",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "sales-order"
                ],
                "summary": "Update an existing Sales Order",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "sales-order"
                ],
                "summary": "Delete a Sales Order",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales-orders": {
            "get": {
                "tags": [
                    "sales-order"
                ],
                "description": "SalesOrder data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Sales Orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sales-order"
                ],
                "summary": "Add a new Sales Order to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SalesOrder"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales-journal/{id}": {
            "get": {
                "tags": [
                    "sales-journal"
                ],
                "summary": "Info for a specific Sales Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "sales-journal"
                ],
                "summary": "Update an existing Sales Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "sales-journal"
                ],
                "summary": "Delete a Sales Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales-journal": {
            "get": {
                "tags": [
                    "sales-journal"
                ],
                "description": "SalesJournal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Sales Journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sales-journal"
                ],
                "summary": "Add a new Sales Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SalesJournal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales-return-journal/{id}": {
            "get": {
                "tags": [
                    "sales-return-journal"
                ],
                "summary": "Info for a specific Sales Return Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Return Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesReturnJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "sales-return-journal"
                ],
                "summary": "Update an existing Sales Return Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Return Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "sales-return-journal"
                ],
                "summary": "Delete a Sales Return Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Sales Return Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales-return-journal": {
            "get": {
                "tags": [
                    "sales-return-journal"
                ],
                "description": "SalesReturnJournal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Sales Return Journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesReturnJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sales-return-journal"
                ],
                "summary": "Add a new Sales Return Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SalesReturnJournal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/amazon-product/{id}": {
            "get": {
                "tags": [
                    "amazon-product"
                ],
                "summary": "Info for a specific Amazon Product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Amazon Product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AmazonProduct"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "amazon-product"
                ],
                "summary": "Update an existing Amazon Product",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Amazon Product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "amazon-product"
                ],
                "summary": "Delete a Amazon Product",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Amazon Product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/amazon-products": {
            "get": {
                "tags": [
                    "amazon-product"
                ],
                "description": "AmazonProduct data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Amazon Products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AmazonProduct"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "amazon-product"
                ],
                "summary": "Add a new Amazon Product to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AmazonProduct"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/frame/{id}": {
            "get": {
                "tags": [
                    "frame"
                ],
                "summary": "Info for a specific Frame",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Frame to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Frame"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "frame"
                ],
                "summary": "Update an existing Frame",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Frame to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "frame"
                ],
                "summary": "Delete a Frame",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Frame to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/frames": {
            "get": {
                "tags": [
                    "frame"
                ],
                "description": "Frame data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Frames",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Frame"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "frame"
                ],
                "summary": "Add a new Frame to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Frame"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/seat/{id}": {
            "get": {
                "tags": [
                    "seat"
                ],
                "summary": "Info for a specific Seat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Seat to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Seat"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "seat"
                ],
                "summary": "Update an existing Seat",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Seat to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "seat"
                ],
                "summary": "Delete a Seat",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Seat to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/seats": {
            "get": {
                "tags": [
                    "seat"
                ],
                "description": "Seat data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Seats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Seat"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "seat"
                ],
                "summary": "Add a new Seat to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Seat"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bicycle/{id}": {
            "get": {
                "tags": [
                    "bicycle"
                ],
                "summary": "Info for a specific Bicycle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bicycle to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bicycle"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "bicycle"
                ],
                "summary": "Update an existing Bicycle",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bicycle to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bicycle"
                ],
                "summary": "Delete a Bicycle",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Bicycle to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/bicycles": {
            "get": {
                "tags": [
                    "bicycle"
                ],
                "description": "Bicycle data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Bicycles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bicycle"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bicycle"
                ],
                "summary": "Add a new Bicycle to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Bicycle"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/vendor/{id}": {
            "get": {
                "tags": [
                    "vendor"
                ],
                "summary": "Info for a specific Vendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Vendor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "vendor"
                ],
                "summary": "Update an existing Vendor",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Vendor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vendor"
                ],
                "summary": "Delete a Vendor",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Vendor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/vendors": {
            "get": {
                "tags": [
                    "vendor"
                ],
                "description": "Vendor data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Vendors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vendor"
                ],
                "summary": "Add a new Vendor to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Vendor"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-payable/{id}": {
            "get": {
                "tags": [
                    "accounts-payable"
                ],
                "summary": "Info for a specific Accounts Payable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Payable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsPayable"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "accounts-payable"
                ],
                "summary": "Update an existing Accounts Payable",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Payable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "accounts-payable"
                ],
                "summary": "Delete a Accounts Payable",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Payable to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-payable": {
            "get": {
                "tags": [
                    "accounts-payable"
                ],
                "description": "AccountsPayable data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Accounts Payable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsPayable"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accounts-payable"
                ],
                "summary": "Add a new Accounts Payable to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountsPayable"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-payable-journal/{id}": {
            "get": {
                "tags": [
                    "accounts-payable-journal"
                ],
                "summary": "Info for a specific Accounts Payable Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Payable Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsPayableJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "accounts-payable-journal"
                ],
                "summary": "Update an existing Accounts Payable Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Payable Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "accounts-payable-journal"
                ],
                "summary": "Delete a Accounts Payable Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Accounts Payable Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/accounts-payable-journal": {
            "get": {
                "tags": [
                    "accounts-payable-journal"
                ],
                "description": "AccountsPayableJournal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Accounts Payable Journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsPayableJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accounts-payable-journal"
                ],
                "summary": "Add a new Accounts Payable Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountsPayableJournal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/inventory-transaction/{id}": {
            "get": {
                "tags": [
                    "inventory-transaction"
                ],
                "summary": "Info for a specific Inventory Transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Inventory Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryTransaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "inventory-transaction"
                ],
                "summary": "Update an existing Inventory Transaction",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Inventory Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory-transaction"
                ],
                "summary": "Delete a Inventory Transaction",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Inventory Transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/inventory-transactions": {
            "get": {
                "tags": [
                    "inventory-transaction"
                ],
                "description": "InventoryTransaction data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Inventory Transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryTransaction"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventory-transaction"
                ],
                "summary": "Add a new Inventory Transaction to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/InventoryTransaction"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/inventory-journal/{id}": {
            "get": {
                "tags": [
                    "inventory-journal"
                ],
                "summary": "Info for a specific Inventory Journal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Inventory Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "inventory-journal"
                ],
                "summary": "Update an existing Inventory Journal",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Inventory Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory-journal"
                ],
                "summary": "Delete a Inventory Journal",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Inventory Journal to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/inventory-journal": {
            "get": {
                "tags": [
                    "inventory-journal"
                ],
                "description": "InventoryJournal data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Inventory Journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryJournal"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventory-journal"
                ],
                "summary": "Add a new Inventory Journal to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/InventoryJournal"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/wheel/{id}": {
            "get": {
                "tags": [
                    "wheel"
                ],
                "summary": "Info for a specific Wheel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Wheel to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wheel"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "wheel"
                ],
                "summary": "Update an existing Wheel",
                "operationId": "doPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Wheel to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "wheel"
                ],
                "summary": "Delete a Wheel",
                "operationId": "doDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Wheel to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/wheels": {
            "get": {
                "tags": [
                    "wheel"
                ],
                "description": "Wheel data",
                "operationId": "doSelect",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from first item",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "How many items to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of Wheels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wheel"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "wheel"
                ],
                "summary": "Add a new Wheel to the database",
                "operationId": "doInsert",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Wheel"
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences applied by the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "JSONPatch": {
                "required": [
                    "op",
                    "path",
                    "value"
                ],
                "properties": {
                    "op": {
                        "description": "Operation",
                        "type": "string",
                        "enum": [
                            "add",
                            "replace",
                            "remove",
                            "move",
                            "copy",
                            "test"
                        ]
                    },
                    "path": {
                        "description": "Object path i.e. /cost/amount",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value of any type"
                    }
                }
            },
            "Feather": {
                "description": "Feather definition",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier",
                        "type": "string"
                    },
                    "name": {
                        "description": "Feather name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Feather description",
                        "type": "string"
                    },
                    "plural": {
                        "description": "Plural",
                        "type": "string"
                    },
                    "module": {
                        "description": "Module",
                        "type": "string"
                    },
                    "authorization": {
                        "description": "Module",
                        "type": "object"
                    },
                    "inherits": {
                        "description": "Inherits",
                        "type": "string",
                        "default": "Object"
                    },
                    "isSystem": {
                        "description": "System flag",
                        "type": "boolean",
                        "default": false
                    },
                    "isChild": {
                        "description": "Indicates feather always a child of another record",
                        "type": "boolean",
                        "default": false
                    },
                    "overloads": {
                        "description": "Property overloads",
                        "type": "object"
                    },
                    "isFetchOnStartup": {
                        "description": "Load all records of this type into the catalog",
                        "type": "boolean",
                        "default": false
                    },
                    "isReadOnly": {
                        "description": "Record can not be edited by the client ",
                        "type": "boolean",
                        "default": false
                    },
                    "properties": {
                        "description": "Properties or columns of the feather",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeatherProperty"
                        }
                    }
                }
            },
            "FeatherProperty": {
                "description": "Feather property definition",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "alias": {
                        "description": "Alternate name for property",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type",
                        "type": "object"
                    },
                    "format": {
                        "description": "Data format",
                        "type": "string"
                    },
                    "scale": {
                        "description": "Numeric scale",
                        "type": "number",
                        "default": -1
                    },
                    "precision": {
                        "description": "Numeric precision",
                        "type": "number",
                        "default": -1
                    },
                    "min": {
                        "description": "Numeric minimum",
                        "type": "number"
                    },
                    "max": {
                        "description": "Numeric maximum",
                        "type": "number"
                    },
                    "default": {
                        "description": "Default",
                        "type": "object"
                    },
                    "autonumber": {
                        "description": "Type",
                        "type": "object"
                    },
                    "isReadOnly": {
                        "description": "Ready only flag",
                        "type": "boolean",
                        "default": false
                    },
                    "isRequired": {
                        "description": "Required flag",
                        "type": "boolean",
                        "default": false
                    },
                    "isUnique": {
                        "description": "Unique flag",
                        "type": "boolean",
                        "default": false
                    },
                    "inheritedFrom": {
                        "description": "Inherited source table",
                        "type": "string"
                    },
                    "dataList": {
                        "description": "Array of input values",
                        "type": "string"
                    },
                    "isIndexed": {
                        "description": "Flag whether to index property",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "Module": {
                "description": "Generic definition for module",
                "properties": {
                    "name": {
                        "description": "Module name",
                        "type": "string"
                    },
                    "script": {
                        "description": "Client side javascript",
                        "type": "string"
                    },
                    "version": {
                        "description": "Module version",
                        "type": "string"
                    },
                    "dependencies": {
                        "description": "Module dependencies",
                        "type": "object"
                    },
                    "isActive": {
                        "description": "Active flag",
                        "type": "boolean"
                    }
                }
            },
            "Settings": {
                "description": "Generic definition for settings",
                "properties": {
                    "etag": {
                        "description": "Version for pessemistic locking",
                        "type": "string"
                    },
                    "data": {
                        "description": "Settings data",
                        "type": "object"
                    }
                }
            },
            "Workbook": {
                "description": "Generic definition for workbook",
                "properties": {
                    "name": {
                        "description": "Workbook name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "module": {
                        "description": "Module reference",
                        "type": "string"
                    },
                    "launchConfig": {
                        "description": "Workbook menu configuration",
                        "type": "object"
                    },
                    "defaultConfig": {
                        "description": "Default workbook page configuration",
                        "type": "object"
                    },
                    "localConfig": {
                        "description": "Workbook configuration altered and shared by users",
                        "type": "object"
                    }
                }
            },
            "Object": {
                "description": "Abstract object class from which all feathers will inherit",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Surrogate key",
                        "type": "string"
                    },
                    "created": {
                        "description": "Create time of the record",
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "description": "User who created the record",
                        "type": "string"
                    },
                    "updated": {
                        "description": "Last time the record was updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "description": "User who created the record",
                        "type": "string"
                    },
                    "isDeleted": {
                        "description": "Indicates the record is no longer active",
                        "type": "boolean"
                    },
                    "lock": {
                        "description": "Record lock information",
                        "type": "object",
                        "format": "lock"
                    },
                    "objectType": {
                        "description": "Discriminates which inherited object type the object represents",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "TableSpec": {
                "description": "Table definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "plural": {
                                "description": "Plural",
                                "type": "string"
                            },
                            "module": {
                                "description": "Module",
                                "type": "string"
                            },
                            "authorization": {
                                "description": "Module",
                                "type": "object"
                            },
                            "inherits": {
                                "description": "Inherits",
                                "type": "string"
                            },
                            "isSystem": {
                                "description": "System flag",
                                "type": "boolean"
                            },
                            "isChild": {
                                "description": "Child flag",
                                "type": "boolean"
                            },
                            "overloads": {
                                "description": "Property overloads",
                                "type": "object"
                            },
                            "isFetchOnStartup": {
                                "description": "Load all records of this type into the catalog",
                                "type": "boolean"
                            },
                            "isReadOnly": {
                                "description": "Record can not be edited by the client ",
                                "type": "boolean"
                            },
                            "properties": {
                                "description": "Parent of \"parent\" on \"TableProperty\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TableProperty"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "module",
                    "inherits",
                    "isSystem",
                    "isChild",
                    "isFetchOnStartup",
                    "isReadOnly"
                ]
            },
            "TableProperty": {
                "description": "Table properties",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "alias": {
                                "description": "Alternate name for property",
                                "type": "string"
                            },
                            "type": {
                                "description": "Type",
                                "type": "object"
                            },
                            "format": {
                                "description": "Data format",
                                "type": "string"
                            },
                            "scale": {
                                "description": "Numeric scale",
                                "type": "number"
                            },
                            "precision": {
                                "description": "Numeric precision",
                                "type": "number"
                            },
                            "min": {
                                "description": "Numeric minimum",
                                "type": "number"
                            },
                            "max": {
                                "description": "Numeric maximum",
                                "type": "number"
                            },
                            "default": {
                                "description": "Default",
                                "type": "object"
                            },
                            "autonumber": {
                                "description": "Type",
                                "type": "object"
                            },
                            "isReadOnly": {
                                "description": "Ready only flag",
                                "type": "boolean"
                            },
                            "isRequired": {
                                "description": "Required flag",
                                "type": "boolean"
                            },
                            "isUnique": {
                                "description": "Unique flag",
                                "type": "boolean"
                            },
                            "inheritedFrom": {
                                "description": "Inherited source table",
                                "type": "string"
                            },
                            "dataList": {
                                "description": "Array of input values",
                                "type": "string"
                            },
                            "isIndexed": {
                                "description": "Flag whether to index property",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "type",
                    "isReadOnly",
                    "isRequired",
                    "isUnique"
                ]
            },
            "Role": {
                "description": "User authorization role",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "members": {
                                "description": "Parent of \"parent\" on \"RoleMember\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RoleMember"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description"
                ]
            },
            "RoleMember": {
                "description": "Member reference to a parent role",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "member": {
                                "description": "member",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Log": {
                "description": "Logs all data changes",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "objectId": {
                                "description": "Object change was performed against",
                                "type": "string"
                            },
                            "action": {
                                "description": "Action performed",
                                "type": "string"
                            },
                            "change": {
                                "description": "Patch formatted json indicating changes",
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "Form": {
                "description": "Form definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "module": {
                                "description": "Module",
                                "type": "string"
                            },
                            "feather": {
                                "description": "Feather",
                                "type": "string"
                            },
                            "tabs": {
                                "description": "Parent of \"parent\" on \"FormTab\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FormTab"
                                }
                            },
                            "attrs": {
                                "description": "Parent of \"parent\" on \"FormAttr\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FormAttr"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "feather"
                ]
            },
            "FormTab": {
                "description": "Form tab definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Tab name",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "FormAttr": {
                "description": "Form attribute definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "attr": {
                                "description": "Attribute name",
                                "type": "string"
                            },
                            "grid": {
                                "description": "Grid (pane) number",
                                "type": "integer"
                            },
                            "unit": {
                                "description": "Unit (column) number",
                                "type": "integer"
                            },
                            "showLabel": {
                                "description": "Flag to show or hide label",
                                "type": "boolean"
                            },
                            "label": {
                                "description": "Alternate attribute label",
                                "type": "string"
                            },
                            "dataList": {
                                "description": "Property that returns an array of options",
                                "type": "string"
                            },
                            "filter": {
                                "description": "Filter definition for relation widget",
                                "type": "object"
                            },
                            "disableCurrency": {
                                "description": "Flag to disable currency selector on currency widget",
                                "type": "boolean"
                            },
                            "columns": {
                                "description": "Parent of \"parent\" on \"FormAttrColumn\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FormAttrColumn"
                                }
                            }
                        }
                    }
                ]
            },
            "FormAttrColumn": {
                "description": "Form attribute column definitions for child tables",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "attr": {
                                "description": "Attribute name",
                                "type": "string"
                            },
                            "label": {
                                "description": "Alternate column label",
                                "type": "string"
                            },
                            "dataList": {
                                "description": "Property that returns an array of options",
                                "type": "string"
                            },
                            "filter": {
                                "description": "Filter for relation search criteria",
                                "type": "object"
                            },
                            "showCurrency": {
                                "description": "Show currency selector if money",
                                "type": "boolean"
                            },
                            "width": {
                                "description": "Default column width",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "RelationWidget": {
                "description": "Relation widget definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "module": {
                                "description": "Module",
                                "type": "string"
                            },
                            "feather": {
                                "description": "Feather",
                                "type": "string"
                            },
                            "form": {
                                "description": "Form relation",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            },
                            "valueProperty": {
                                "description": "User key property",
                                "type": "string"
                            },
                            "labelProperty": {
                                "description": "Description property",
                                "type": "string"
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            },
                            "searchColumns": {
                                "description": "Parent of \"parent\" on \"RelationSearchColumn\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelationSearchColumn"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "feather",
                    "form",
                    "valueProperty",
                    "isActive"
                ]
            },
            "RelationSearchColumn": {
                "description": "Columns shown on relation widget search",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "attr": {
                                "description": "Attribute name",
                                "type": "string"
                            },
                            "label": {
                                "description": "Alternate column label",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "attr"
                ]
            },
            "Comment": {
                "description": "Note",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "text": {
                                "description": "Note text",
                                "type": "string",
                                "format": "text-area"
                            }
                        }
                    }
                ]
            },
            "Document": {
                "description": "Base document class",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "owner": {
                                "description": "Owner of the document",
                                "type": "string"
                            },
                            "etag": {
                                "description": "Optimistic locking key",
                                "type": "string"
                            },
                            "comments": {
                                "description": "Parent of \"parent\" on \"DocumentComment\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DocumentComment"
                                }
                            }
                        }
                    }
                ]
            },
            "DocumentComment": {
                "description": "Comment on document",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Comment"
                    }
                ]
            },
            "Kind": {
                "description": "Base class for physical types",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Natural key",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "note": {
                                "description": "Note",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Unit": {
                "description": "Unit of measure",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Natural key",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "dimension": {
                                "description": "Dimension",
                                "type": "string",
                                "format": "enum"
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "CurrencyUnit": {
                "description": "Currency Unit of measure",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Unit"
                    },
                    {
                        "properties": {
                            "symbol": {
                                "description": "Currency unit symbol",
                                "type": "string"
                            },
                            "minorUnit": {
                                "description": "Precision",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "required": [
                    "minorUnit"
                ]
            },
            "Currency": {
                "description": "Currency",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "symbol": {
                                "description": "Symbol",
                                "type": "string"
                            },
                            "minorUnit": {
                                "description": "Precision",
                                "type": "integer"
                            },
                            "isBase": {
                                "description": "System base currency flag",
                                "type": "boolean"
                            },
                            "hasDisplayUnit": {
                                "description": "Use alternate unit of mesaure in display",
                                "type": "boolean"
                            },
                            "displayUnit": {
                                "description": "Display unit of mesaure",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/CurrencyUnit"
                                }
                            },
                            "conversions": {
                                "description": "Parent of \"parent\" on \"CurrencyUnitConversion\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CurrencyUnitConversion"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "hasDisplayUnit"
                ]
            },
            "CurrencyUnitConversion": {
                "description": "Currency Unit Conversion",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "toUnit": {
                                "description": "To unit of measure",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "ratio": {
                                "description": "conversion ratio",
                                "type": "number"
                            }
                        }
                    }
                ],
                "required": [
                    "toUnit",
                    "ratio"
                ]
            },
            "CurrencyConversion": {
                "description": "Currency Conversion rates",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "fromCurrency": {
                                "description": "Currency converting from",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "toCurrency": {
                                "description": "Currency converting to",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "ratio": {
                                "description": "conversion ratio",
                                "type": "number"
                            },
                            "effective": {
                                "description": "effective date",
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                ],
                "required": [
                    "fromCurrency",
                    "toCurrency",
                    "ratio",
                    "effective"
                ]
            },
            "BaseCurrency": {
                "description": "Base currency effectivity",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "currency": {
                                "description": "Base currency",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "effective": {
                                "description": "Effective time",
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                ],
                "required": [
                    "currency",
                    "effective"
                ]
            },
            "Country": {
                "description": "Country",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Country code",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "name"
                ]
            },
            "State": {
                "description": "State",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "State code",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "name"
                ]
            },
            "Address": {
                "description": "Physical location",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Home, work, other",
                                "type": "string",
                                "format": "enum"
                            },
                            "street": {
                                "description": "Street",
                                "type": "string"
                            },
                            "unit": {
                                "description": "Unit",
                                "type": "string"
                            },
                            "city": {
                                "description": "City",
                                "type": "string"
                            },
                            "state": {
                                "description": "State",
                                "type": "string"
                            },
                            "postalCode": {
                                "description": "Postal code",
                                "type": "string"
                            },
                            "country": {
                                "description": "Country",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "street",
                    "city",
                    "state",
                    "postalCode",
                    "country"
                ]
            },
            "SocialNetwork": {
                "description": "Social media networks",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Network name",
                                "type": "string"
                            },
                            "description": {
                                "description": "description",
                                "type": "string"
                            },
                            "url": {
                                "description": "Url",
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                ]
            },
            "Honorific": {
                "description": "Honorific",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Title",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Contact": {
                "description": "Information about a person",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "honorific": {
                                "description": "Honorific",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Honorific"
                                }
                            },
                            "firstName": {
                                "description": "First name",
                                "type": "string"
                            },
                            "lastName": {
                                "description": "Last name",
                                "type": "string"
                            },
                            "fullName": {
                                "description": "Name",
                                "type": "string"
                            },
                            "phone": {
                                "description": "Primary phone number",
                                "type": "string",
                                "format": "tel"
                            },
                            "phoneType": {
                                "description": "Home, work, other",
                                "type": "string",
                                "format": "enum"
                            },
                            "email": {
                                "description": "Primary phone number",
                                "type": "string",
                                "format": "email"
                            },
                            "emailType": {
                                "description": "Personal, work, other",
                                "type": "string",
                                "format": "enum"
                            },
                            "address": {
                                "description": "Primary Address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "webSite": {
                                "description": "Personal web page",
                                "type": "string",
                                "format": "url"
                            },
                            "phones": {
                                "description": "Parent of \"parent\" on \"ContactPhone\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPhone"
                                }
                            },
                            "emails": {
                                "description": "Parent of \"parent\" on \"ContactEmail\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactEmail"
                                }
                            },
                            "addresses": {
                                "description": "Parent of \"parent\" on \"ContactAddress\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactAddress"
                                }
                            },
                            "social": {
                                "description": "Parent of \"parent\" on \"ContactSocialAccount\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactSocialAccount"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "lastName",
                    "phoneType",
                    "emailType"
                ]
            },
            "ContactPhone": {
                "description": "Contact phone numbers",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Home, work, other",
                                "type": "string",
                                "format": "enum"
                            },
                            "phone": {
                                "description": "Phone number",
                                "type": "string",
                                "format": "tel"
                            },
                            "isPrimary": {
                                "description": "Primary phone flag",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "ContactEmail": {
                "description": "Contact email addresses",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Personal, work, other",
                                "type": "string",
                                "format": "enum"
                            },
                            "email": {
                                "description": "Email address",
                                "type": "string",
                                "format": "email"
                            },
                            "isPrimary": {
                                "description": "Primary email flag",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "ContactAddress": {
                "description": "Contact address",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "address": {
                                "description": "Address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "isPrimary": {
                                "description": "Primary address flag",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "ContactSocialAccount": {
                "description": "Contact social media accounts",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "network": {
                                "description": "Social network",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/SocialNetwork"
                                }
                            },
                            "userName": {
                                "description": "User name",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Element": {
                "description": "Unit of measure",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    }
                ]
            },
            "Container": {
                "description": "Instance of a kind",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Natural key",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "note": {
                                "description": "Note",
                                "type": "string",
                                "format": "text-area"
                            },
                            "isUsed": {
                                "description": "Indicates node has transactions",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "isUsed"
                ]
            },
            "Node": {
                "description": "Base class for hiearchy support",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Container"
                    },
                    {
                        "properties": {
                            "parent": {
                                "description": "Parent container",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Container"
                                }
                            }
                        }
                    }
                ]
            },
            "NodeBalance": {
                "description": "Base class for hiearchy support",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Node"
                    },
                    {
                        "properties": {
                            "balance": {
                                "description": "Current quantity",
                                "type": "number"
                            },
                            "unit": {
                                "description": "Unit of measure",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "unit"
                ]
            },
            "Period": {
                "description": "Base class for bucketed time period support",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "start": {
                                "description": "Start date",
                                "type": "string",
                                "format": "date"
                            },
                            "end": {
                                "description": "End date",
                                "type": "string",
                                "format": "date"
                            },
                            "status": {
                                "description": "Status",
                                "type": "string",
                                "format": "enum"
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "start",
                    "end",
                    "status"
                ]
            },
            "NodePeriodBalance": {
                "description": "Quantity of objects in node per period",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NodeBalance"
                    },
                    {
                        "properties": {
                            "period": {
                                "description": "Period",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Period"
                                }
                            },
                            "debits": {
                                "description": "Sum of debits in the period",
                                "type": "number"
                            },
                            "credits": {
                                "description": "Sum of credits in the period",
                                "type": "number"
                            }
                        }
                    }
                ]
            },
            "Action": {
                "description": "Abstract action",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "kind": {
                                "description": "Object action is taken on",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            },
                            "date": {
                                "description": "Action date",
                                "type": "string",
                                "format": "date"
                            },
                            "note": {
                                "description": "Note",
                                "type": "string"
                            },
                            "distributions": {
                                "description": "Parent of \"parent\" on \"Distribution\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Distribution"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "kind"
                ]
            },
            "Distribution": {
                "description": "Action distribution",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "node": {
                                "description": "Object container",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            },
                            "debit": {
                                "description": "Debit",
                                "type": "number"
                            },
                            "credit": {
                                "description": "Credit",
                                "type": "number"
                            },
                            "isPropagation": {
                                "description": "Parent propagation",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "Request": {
                "description": "Action request",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Action"
                    },
                    {
                        "properties": {
                            "isPosted": {
                                "description": "Transaction is complete",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "Transaction": {
                "description": "Action history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Action"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Transaction number",
                                "type": "string"
                            },
                            "parent": {
                                "description": "Parent action",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "number"
                ]
            },
            "Conversion": {
                "description": "Conversion rates",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "kind": {
                                "description": "Transaction number",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            },
                            "element": {
                                "description": "Element",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Element"
                                }
                            },
                            "fromNode": {
                                "description": "From node",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            },
                            "fromQuantity": {
                                "description": "From quantity bound",
                                "type": "number"
                            },
                            "fromUnit": {
                                "description": "Quantity unit",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "toNode": {
                                "description": "To node",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            },
                            "toQuantity": {
                                "description": "To fixed quantity",
                                "type": "number"
                            },
                            "toUnit": {
                                "description": "Amount unit",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "toRatio": {
                                "description": "To ratio",
                                "type": "number"
                            },
                            "effective": {
                                "description": "Effective date",
                                "type": "string",
                                "format": "date"
                            },
                            "transact": {
                                "description": "Process flag",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "kind",
                    "fromQuantity",
                    "fromUnit",
                    "toQuantity",
                    "toUnit",
                    "toRatio",
                    "effective",
                    "transact"
                ]
            },
            "Activity": {
                "description": "Activity",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "startDate": {
                                "description": "Start date",
                                "type": "string",
                                "format": "date"
                            },
                            "dueDate": {
                                "description": "Due date",
                                "type": "string",
                                "format": "date"
                            },
                            "priority": {
                                "description": "Priority",
                                "type": "integer"
                            },
                            "isCompleted": {
                                "description": "Completion status",
                                "type": "boolean"
                            },
                            "activityType": {
                                "description": "Discriminator",
                                "type": "string"
                            },
                            "comments": {
                                "description": "Parent of \"parent\" on \"ActivityComment\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ActivityComment"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "startDate",
                    "dueDate"
                ]
            },
            "ActivityComment": {
                "description": "Comment on Activity",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Comment"
                    }
                ]
            },
            "Task": {
                "description": "User task",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Activity"
                    }
                ]
            },
            "Location": {
                "description": "Physical locations",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Node"
                    }
                ]
            },
            "LocationBalance": {
                "description": "Physical location balance",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NodeBalance"
                    }
                ]
            },
            "Site": {
                "description": "Physical site",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Location"
                    },
                    {
                        "properties": {
                            "address": {
                                "description": "Physical address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                ]
            },
            "ItemCategory": {
                "description": "Item category",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "parent": {
                                "description": "Parent category",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            }
                        }
                    }
                ]
            },
            "Item": {
                "description": "Information about a product or service",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            },
                            "isSold": {
                                "description": "Selling status",
                                "type": "boolean"
                            },
                            "barcode": {
                                "description": "Bar code number",
                                "type": "string"
                            },
                            "manufacturer": {
                                "description": "Manufacturer",
                                "type": "string"
                            },
                            "unit": {
                                "description": "Unit of measure",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "cost": {
                                "description": "Cost",
                                "type": "object",
                                "format": "money"
                            },
                            "price": {
                                "description": "Unit price",
                                "type": "object",
                                "format": "money"
                            },
                            "site": {
                                "description": "Primary site",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "sites": {
                                "description": "Parent of \"parent\" on \"ItemSite\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ItemSite"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "isActive",
                    "cost"
                ]
            },
            "ItemSite": {
                "description": "Allowed item site",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "site": {
                                "description": "Site",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "isPrimary": {
                                "description": "Flag whether primary site",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "TestTypes": {
                "description": "Test all types and formats",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "integer": {
                                "description": "Integer",
                                "type": "integer"
                            },
                            "number": {
                                "description": "Number",
                                "type": "number"
                            },
                            "date": {
                                "description": "Date",
                                "type": "string",
                                "format": "date"
                            },
                            "dateTime": {
                                "description": "Timestamp with timezone",
                                "type": "string",
                                "format": "date-time"
                            },
                            "password": {
                                "description": "Text",
                                "type": "string",
                                "format": "password"
                            },
                            "tel": {
                                "description": "Phone",
                                "type": "string",
                                "format": "tel"
                            },
                            "url": {
                                "description": "Hyperlink",
                                "type": "string",
                                "format": "url"
                            },
                            "textArea": {
                                "description": "Large text area",
                                "type": "string",
                                "format": "text-area"
                            },
                            "color": {
                                "description": "Color picker",
                                "type": "string",
                                "format": "color"
                            },
                            "money": {
                                "description": "Money object",
                                "type": "object",
                                "format": "money"
                            }
                        }
                    }
                ]
            },
            "Terms": {
                "description": "Payment terms",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Code",
                                "type": "string"
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            },
                            "policy": {
                                "description": "Date calculation policy",
                                "type": "string",
                                "format": "enum"
                            },
                            "net": {
                                "description": "Net days for payment",
                                "type": "integer"
                            },
                            "day": {
                                "description": "Day of month",
                                "type": "integer"
                            },
                            "discountDays": {
                                "description": "Early payment discount days",
                                "type": "integer"
                            },
                            "discount": {
                                "description": "Discount percent",
                                "type": "number"
                            },
                            "isDepositRequired": {
                                "description": "Deposit amount",
                                "type": "boolean"
                            },
                            "depositPercent": {
                                "description": "Deposit percent",
                                "type": "number"
                            },
                            "depositAmount": {
                                "description": "Deposit amount",
                                "type": "object",
                                "format": "money"
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "policy",
                    "isDepositRequired",
                    "depositAmount"
                ]
            },
            "ShipMethod": {
                "description": "Shipping methods",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Code",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "TaxType": {
                "description": "Tax types",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "BillEntity": {
                "description": "Billing entity",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "site": {
                                "description": "Default site",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "billTo": {
                                "description": "Bill to Address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "billToIsShipTo": {
                                "description": "Active status",
                                "type": "boolean"
                            },
                            "shipTo": {
                                "description": "Ship to Address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "contact": {
                                "description": "Contact",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            },
                            "currency": {
                                "description": "Currency",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "terms": {
                                "description": "Payment terms",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Terms"
                                }
                            },
                            "taxType": {
                                "description": "Tax type",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/TaxType"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "currency",
                    "terms"
                ]
            },
            "BillOrder": {
                "description": "Abstract billing documnet",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Order number",
                                "type": "string"
                            },
                            "billEntity": {
                                "description": "Billing entity",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/BillEntity"
                                }
                            },
                            "docDate": {
                                "description": "Document date",
                                "type": "string",
                                "format": "date"
                            },
                            "status": {
                                "description": "Order status",
                                "type": "string"
                            },
                            "billTo": {
                                "description": "Bill to address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "contact": {
                                "description": "Contact",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "site": {
                                "description": "Site",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "currency": {
                                "description": "Currency",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "terms": {
                                "description": "Payment terms",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Terms"
                                }
                            },
                            "taxType": {
                                "description": "Tax type",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/TaxType"
                                }
                            },
                            "subtotal": {
                                "description": "Subtotal",
                                "type": "object",
                                "format": "money"
                            },
                            "freight": {
                                "description": "Freight",
                                "type": "object",
                                "format": "money"
                            },
                            "tax": {
                                "description": "Tax",
                                "type": "object",
                                "format": "money"
                            },
                            "total": {
                                "description": "Total",
                                "type": "object",
                                "format": "money"
                            }
                        }
                    }
                ],
                "required": [
                    "billEntity",
                    "docDate",
                    "currency",
                    "terms",
                    "subtotal",
                    "freight",
                    "tax",
                    "total"
                ]
            },
            "OrderLine": {
                "description": "Order line",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Line number",
                                "type": "integer"
                            },
                            "item": {
                                "description": "Item",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            },
                            "site": {
                                "description": "Site",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "ordered": {
                                "description": "Quantity ordered",
                                "type": "number"
                            },
                            "price": {
                                "description": "Unit price",
                                "type": "object",
                                "format": "money"
                            },
                            "extended": {
                                "description": "Extended price",
                                "type": "object",
                                "format": "money"
                            },
                            "taxType": {
                                "description": "Tax type",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/TaxType"
                                }
                            },
                            "remarks": {
                                "description": "Order remarks",
                                "type": "string",
                                "format": "text-area"
                            }
                        }
                    }
                ],
                "required": [
                    "number",
                    "item",
                    "site",
                    "ordered",
                    "price",
                    "extended"
                ]
            },
            "ShipOrder": {
                "description": "Shippable order",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BillOrder"
                    },
                    {
                        "properties": {
                            "shipTo": {
                                "description": "Ship to address",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "shipMethod": {
                                "description": "Ship method",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/ShipMethod"
                                }
                            }
                        }
                    }
                ]
            },
            "Opportunity": {
                "description": "Opportunity",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Natural key",
                                "type": "string"
                            },
                            "amount": {
                                "description": "Estimated sales amount",
                                "type": "object",
                                "format": "money"
                            },
                            "stage": {
                                "description": "Pipeline stage",
                                "type": "string"
                            },
                            "contact": {
                                "description": "Primary Contact",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "tasks": {
                                "description": "Parent of \"parent\" on \"OpportunityTask\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OpportunityTask"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "amount"
                ]
            },
            "OpportunityTask": {
                "description": "Opportunity Task",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Activity"
                    }
                ]
            },
            "Lead": {
                "description": "A sales contact",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Contact"
                    },
                    {
                        "properties": {
                            "company": {
                                "description": "Company",
                                "type": "string"
                            },
                            "probability": {
                                "description": "Probability of closing",
                                "type": "number"
                            },
                            "opportunity": {
                                "description": "Related Opportunity",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Opportunity"
                                }
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            },
                            "annualIncome": {
                                "description": "Work phone",
                                "type": "number"
                            },
                            "creditScore": {
                                "description": "Credit Score",
                                "type": "integer"
                            },
                            "role": {
                                "description": "Role",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                ]
            },
            "LedgerAccount": {
                "description": "Ledger accounts",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Node"
                    },
                    {
                        "properties": {
                            "isParent": {
                                "description": "Indicates account is a parent of other accounts",
                                "type": "boolean"
                            },
                            "type": {
                                "description": "Account type",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "isParent",
                    "type"
                ]
            },
            "AccountMapType": {
                "description": "Account map types for journal entries",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    }
                ]
            },
            "AccountMap": {
                "description": "General ledger account map for journals",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Account map type",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/AccountMapType"
                                }
                            },
                            "account": {
                                "description": "Ledger account",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/LedgerAccount"
                                }
                            },
                            "category": {
                                "description": "category",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            },
                            "site": {
                                "description": "Physcal office, warehouse or plant",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        }
                    }
                ]
            },
            "FiscalYear": {
                "description": "Fiscal year periods",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Period"
                    }
                ]
            },
            "FiscalPeriod": {
                "description": "Fiscal periods",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Period"
                    },
                    {
                        "properties": {
                            "parent": {
                                "description": "Fiscal year",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/FiscalYear"
                                }
                            },
                            "previous": {
                                "description": "Previous period.",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Period"
                                }
                            },
                            "next": {
                                "description": "Next period.",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Period"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "parent"
                ]
            },
            "LedgerTransaction": {
                "description": "Abstract ledger transactions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "currency": {
                                "description": "Currency transaction is in",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "date": {
                                "description": "Journal date",
                                "type": "string",
                                "format": "date"
                            },
                            "note": {
                                "description": "Note",
                                "type": "string",
                                "format": "text-area"
                            },
                            "isPosted": {
                                "description": "Transaction is complete",
                                "type": "boolean"
                            },
                            "number": {
                                "description": "Journal number",
                                "type": "string"
                            },
                            "reference": {
                                "description": "Reference to source document",
                                "type": "string"
                            },
                            "folio": {
                                "description": "Reference to ledger posting",
                                "type": "string"
                            },
                            "amount": {
                                "description": "Total amount",
                                "type": "object",
                                "format": "money"
                            },
                            "distributions": {
                                "description": "Parent of \"parent\" on \"LedgerDistribution\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LedgerDistribution"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "currency"
                ]
            },
            "LedgerDistribution": {
                "description": "Ledger distribution",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "account": {
                                "description": "Ledger account",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/LedgerAccount"
                                }
                            },
                            "debit": {
                                "description": "Debit",
                                "type": "object",
                                "format": "money"
                            },
                            "credit": {
                                "description": "Credit",
                                "type": "object",
                                "format": "money"
                            }
                        }
                    }
                ],
                "required": [
                    "account",
                    "debit",
                    "credit"
                ]
            },
            "Journal": {
                "description": "Journal entries",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LedgerTransaction"
                    }
                ]
            },
            "GeneralJournal": {
                "description": "General journal entries",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Journal"
                    }
                ]
            },
            "GeneralLedgerTransaction": {
                "description": "General ledger entries",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LedgerTransaction"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "General ledger number",
                                "type": "string"
                            },
                            "parent": {
                                "description": "Parent action",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Journal"
                                }
                            }
                        }
                    }
                ]
            },
            "TrialBalance": {
                "description": "Amount of currency in ledger accounts per period",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Container"
                    },
                    {
                        "properties": {
                            "parent": {
                                "description": "Ledger Account",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/LedgerAccount"
                                }
                            },
                            "currency": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            },
                            "balance": {
                                "description": "Current amount",
                                "type": "object",
                                "format": "money"
                            },
                            "unit": {
                                "description": "Unit of measure",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "period": {
                                "description": "Period",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Period"
                                }
                            },
                            "debits": {
                                "description": "Sum of debits in the period",
                                "type": "object",
                                "format": "money"
                            },
                            "credits": {
                                "description": "Sum of credits in the period",
                                "type": "object",
                                "format": "money"
                            },
                            "previous": {
                                "description": "Previous node period balance",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/NodePeriodBalance"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "balance",
                    "unit",
                    "debits",
                    "credits"
                ]
            },
            "BillSubledger": {
                "description": "Subledger for billing records",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BillOrder"
                    },
                    {
                        "properties": {
                            "dueDate": {
                                "description": "Date payment is due",
                                "type": "string",
                                "format": "date"
                            },
                            "isPosted": {
                                "description": "Is posted flag",
                                "type": "boolean"
                            },
                            "postedDate": {
                                "description": "Posted date",
                                "type": "string",
                                "format": "date"
                            },
                            "paid": {
                                "description": "Amount currently paid",
                                "type": "object",
                                "format": "money"
                            },
                            "balance": {
                                "description": "Amount currently due",
                                "type": "object",
                                "format": "money"
                            },
                            "journal": {
                                "description": "Reference to journal",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Journal"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "dueDate"
                ]
            },
            "Customer": {
                "description": "Customer",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BillEntity"
                    },
                    {
                        "properties": {
                            "creditStatus": {
                                "description": "creditStatus",
                                "type": "string",
                                "format": "enum"
                            }
                        }
                    }
                ],
                "required": [
                    "creditStatus"
                ]
            },
            "Receivable": {
                "description": "Receivable subledger",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BillSubledger"
                    }
                ]
            },
            "ReceivableLine": {
                "description": "Receivable line",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OrderLine"
                    },
                    {
                        "properties": {
                            "billed": {
                                "description": "Quantity billed",
                                "type": "number"
                            }
                        }
                    }
                ],
                "required": [
                    "billed"
                ]
            },
            "Invoice": {
                "description": "Invoice",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Receivable"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Invoice number",
                                "type": "string"
                            },
                            "lines": {
                                "description": "Parent of \"parent\" on \"InvoiceLine\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InvoiceLine"
                                }
                            }
                        }
                    }
                ]
            },
            "InvoiceLine": {
                "description": "Invoice line",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReceivableLine"
                    }
                ]
            },
            "CreditMemo": {
                "description": "Credit memo",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Receivable"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Credit memo number",
                                "type": "string"
                            },
                            "lines": {
                                "description": "Parent of \"parent\" on \"CreditMemoLine\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreditMemoLine"
                                }
                            }
                        }
                    }
                ]
            },
            "CreditMemoLine": {
                "description": "Receivable line",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReceivableLine"
                    }
                ]
            },
            "AccountsReceivable": {
                "description": "Accounts receivable balance",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Node"
                    }
                ]
            },
            "AccountsReceivableJournal": {
                "description": "Accounts receivable journal",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Journal"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Journal number",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "SalesOrder": {
                "description": "Sales order",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ShipOrder"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Sales order number",
                                "type": "string"
                            },
                            "requestDate": {
                                "description": "Requsted date to ship",
                                "type": "string",
                                "format": "date"
                            },
                            "promiseDate": {
                                "description": "Promise date to ship",
                                "type": "string",
                                "format": "date"
                            },
                            "lines": {
                                "description": "Parent of \"parent\" on \"SalesOrderLine\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SalesOrderLine"
                                }
                            }
                        }
                    }
                ]
            },
            "SalesOrderLine": {
                "description": "Sales order line",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OrderLine"
                    },
                    {
                        "properties": {
                            "promiseDate": {
                                "description": "Promise date",
                                "type": "string",
                                "format": "date"
                            },
                            "shipped": {
                                "description": "Quantity shipped",
                                "type": "number"
                            },
                            "shipInstructions": {
                                "description": "Shipment Instructions",
                                "type": "string",
                                "format": "text-area"
                            },
                            "status": {
                                "description": "Status",
                                "type": "string",
                                "format": "enum"
                            }
                        }
                    }
                ],
                "required": [
                    "promiseDate",
                    "status"
                ]
            },
            "SalesJournal": {
                "description": "Sales journal",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Journal"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Journal number",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "SalesReturnJournal": {
                "description": "Sales return journal",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Journal"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Journal number",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "AmazonProduct": {
                "description": "Amazon products",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Item"
                    },
                    {
                        "properties": {
                            "asin": {
                                "description": "Material",
                                "type": "string"
                            },
                            "sellerRank": {
                                "description": "Best seller rank",
                                "type": "number"
                            },
                            "shippingWeight": {
                                "description": "Shipping weight, pounds",
                                "type": "number"
                            },
                            "productDescription": {
                                "description": "Published product description",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Frame": {
                "description": "Bicycle frames",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AmazonProduct"
                    },
                    {
                        "properties": {
                            "material": {
                                "description": "Material",
                                "type": "string"
                            },
                            "color": {
                                "description": "Color",
                                "type": "string"
                            },
                            "bottomBracket": {
                                "description": "Bottom bracket types",
                                "type": "string"
                            },
                            "fork": {
                                "description": "Frame fork type",
                                "type": "string"
                            },
                            "front": {
                                "description": "Front type",
                                "type": "string"
                            },
                            "seatPost": {
                                "description": "Seat post size",
                                "type": "string"
                            },
                            "weight": {
                                "description": "Weight, grams",
                                "type": "number"
                            }
                        }
                    }
                ]
            },
            "Seat": {
                "description": "Bicycle seats",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AmazonProduct"
                    },
                    {
                        "properties": {
                            "color": {
                                "description": "Color",
                                "type": "string"
                            },
                            "style": {
                                "description": "Seat style",
                                "type": "string"
                            },
                            "weight": {
                                "description": "Weight, grams",
                                "type": "number"
                            }
                        }
                    }
                ]
            },
            "Bicycle": {
                "description": "Bicycles",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AmazonProduct"
                    },
                    {
                        "properties": {
                            "frameMaterial": {
                                "description": "Material",
                                "type": "string"
                            },
                            "color": {
                                "description": "Color",
                                "type": "string"
                            },
                            "size": {
                                "description": "Downtube length, inches",
                                "type": "number"
                            },
                            "hub": {
                                "description": "Hub type",
                                "type": "string"
                            },
                            "gearSet": {
                                "description": "Gear set",
                                "type": "string"
                            },
                            "style": {
                                "description": "Style",
                                "type": "string"
                            },
                            "weight": {
                                "description": "Weight, pounds",
                                "type": "number"
                            }
                        }
                    }
                ]
            },
            "Vendor": {
                "description": "Vendor",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Vendor code",
                                "type": "string"
                            },
                            "name": {
                                "description": "Vendor name",
                                "type": "string"
                            },
                            "billToAddress": {
                                "description": "Bill to Address",
                                "type": "string"
                            },
                            "shipToAddress": {
                                "description": "Ship to Address",
                                "type": "string"
                            },
                            "contact": {
                                "description": "Contact",
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "AccountsPayable": {
                "description": "Accounts payable subledger",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Node"
                    }
                ]
            },
            "AccountsPayableJournal": {
                "description": "Accounts payable journal",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Journal"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Journal number",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "InventoryTransaction": {
                "description": "Inventory transactions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transaction"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Transaction number",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "InventoryJournal": {
                "description": "Inventory journal",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Journal"
                    },
                    {
                        "properties": {
                            "number": {
                                "description": "Journal number",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Wheel": {
                "description": "Bicycle wheel",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AmazonProduct"
                    },
                    {
                        "properties": {
                            "material": {
                                "description": "Material",
                                "type": "string"
                            },
                            "diameter": {
                                "description": "Diameter, inches",
                                "type": "number"
                            },
                            "width": {
                                "description": "Width",
                                "type": "number"
                            },
                            "hub": {
                                "description": "Hub type",
                                "type": "string"
                            },
                            "style": {
                                "description": "Wheel style",
                                "type": "string"
                            },
                            "weight": {
                                "description": "Weight, grams",
                                "type": "number"
                            }
                        }
                    }
                ]
            }
        },
        "requestBodies": {
            "JSONPatch": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/JSONPatch"
                        }
                    }
                },
                "description": "JSON Patch (RFC 6902)",
                "required": true
            },
            "Feather": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Feather"
                        }
                    }
                },
                "description": "Feather to be saved",
                "required": true
            },
            "Settings": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Settings"
                        }
                    }
                },
                "description": "Settings to be saved",
                "required": true
            },
            "Workbook": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Workbook"
                        }
                    }
                },
                "description": "Workbook to be saved",
                "required": true
            },
            "Object": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Object"
                        }
                    }
                },
                "description": "Object to be added",
                "required": true
            },
            "TableSpec": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TableSpec"
                        }
                    }
                },
                "description": "Table Spec to be added",
                "required": true
            },
            "Role": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "description": "Role to be added",
                "required": true
            },
            "Log": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Log"
                        }
                    }
                },
                "description": "Log to be added",
                "required": true
            },
            "Form": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Form"
                        }
                    }
                },
                "description": "Form to be added",
                "required": true
            },
            "RelationWidget": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RelationWidget"
                        }
                    }
                },
                "description": "Relation Widget to be added",
                "required": true
            },
            "Document": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                },
                "description": "Document to be added",
                "required": true
            },
            "Kind": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Kind"
                        }
                    }
                },
                "description": "Kind to be added",
                "required": true
            },
            "Unit": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Unit"
                        }
                    }
                },
                "description": "Unit to be added",
                "required": true
            },
            "CurrencyUnit": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CurrencyUnit"
                        }
                    }
                },
                "description": "Currency Unit to be added",
                "required": true
            },
            "Currency": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    }
                },
                "description": "Currency to be added",
                "required": true
            },
            "CurrencyConversion": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CurrencyConversion"
                        }
                    }
                },
                "description": "Currency Conversion to be added",
                "required": true
            },
            "BaseCurrency": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BaseCurrency"
                        }
                    }
                },
                "description": "Base Currency to be added",
                "required": true
            },
            "Country": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Country"
                        }
                    }
                },
                "description": "Country to be added",
                "required": true
            },
            "State": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/State"
                        }
                    }
                },
                "description": "State to be added",
                "required": true
            },
            "SocialNetwork": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SocialNetwork"
                        }
                    }
                },
                "description": "Social Network to be added",
                "required": true
            },
            "Honorific": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Honorific"
                        }
                    }
                },
                "description": "Honorific to be added",
                "required": true
            },
            "Contact": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                },
                "description": "Contact to be added",
                "required": true
            },
            "Element": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Element"
                        }
                    }
                },
                "description": "Element to be added",
                "required": true
            },
            "Container": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Container"
                        }
                    }
                },
                "description": "Container to be added",
                "required": true
            },
            "Node": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Node"
                        }
                    }
                },
                "description": "Node to be added",
                "required": true
            },
            "NodeBalance": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NodeBalance"
                        }
                    }
                },
                "description": "Node Balance to be added",
                "required": true
            },
            "Period": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Period"
                        }
                    }
                },
                "description": "Period to be added",
                "required": true
            },
            "NodePeriodBalance": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NodePeriodBalance"
                        }
                    }
                },
                "description": "Node Period Balance to be added",
                "required": true
            },
            "Action": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Action"
                        }
                    }
                },
                "description": "Action to be added",
                "required": true
            },
            "Request": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Request"
                        }
                    }
                },
                "description": "Request to be added",
                "required": true
            },
            "Transaction": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    }
                },
                "description": "Transaction to be added",
                "required": true
            },
            "Conversion": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Conversion"
                        }
                    }
                },
                "description": "Conversion to be added",
                "required": true
            },
            "Activity": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Activity"
                        }
                    }
                },
                "description": "Activity to be added",
                "required": true
            },
            "Task": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                },
                "description": "Task to be added",
                "required": true
            },
            "Location": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Location"
                        }
                    }
                },
                "description": "Location to be added",
                "required": true
            },
            "LocationBalance": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/LocationBalance"
                        }
                    }
                },
                "description": "Location Balance to be added",
                "required": true
            },
            "Site": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Site"
                        }
                    }
                },
                "description": "Site to be added",
                "required": true
            },
            "ItemCategory": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ItemCategory"
                        }
                    }
                },
                "description": "Item Category to be added",
                "required": true
            },
            "Item": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Item"
                        }
                    }
                },
                "description": "Item to be added",
                "required": true
            },
            "Terms": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Terms"
                        }
                    }
                },
                "description": "Terms to be added",
                "required": true
            },
            "ShipMethod": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ShipMethod"
                        }
                    }
                },
                "description": "Ship Method to be added",
                "required": true
            },
            "TaxType": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TaxType"
                        }
                    }
                },
                "description": "Tax Type to be added",
                "required": true
            },
            "BillEntity": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BillEntity"
                        }
                    }
                },
                "description": "Bill Entity to be added",
                "required": true
            },
            "BillOrder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BillOrder"
                        }
                    }
                },
                "description": "Bill Order to be added",
                "required": true
            },
            "ShipOrder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ShipOrder"
                        }
                    }
                },
                "description": "Ship Order to be added",
                "required": true
            },
            "Opportunity": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Opportunity"
                        }
                    }
                },
                "description": "Opportunity to be added",
                "required": true
            },
            "Lead": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Lead"
                        }
                    }
                },
                "description": "Lead to be added",
                "required": true
            },
            "LedgerAccount": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/LedgerAccount"
                        }
                    }
                },
                "description": "Ledger Account to be added",
                "required": true
            },
            "AccountMapType": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountMapType"
                        }
                    }
                },
                "description": "Account Map Type to be added",
                "required": true
            },
            "AccountMap": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountMap"
                        }
                    }
                },
                "description": "Account Map to be added",
                "required": true
            },
            "FiscalYear": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FiscalYear"
                        }
                    }
                },
                "description": "Fiscal Year to be added",
                "required": true
            },
            "FiscalPeriod": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FiscalPeriod"
                        }
                    }
                },
                "description": "Fiscal Period to be added",
                "required": true
            },
            "LedgerTransaction": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/LedgerTransaction"
                        }
                    }
                },
                "description": "Ledger Transaction to be added",
                "required": true
            },
            "Journal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Journal"
                        }
                    }
                },
                "description": "Journal to be added",
                "required": true
            },
            "GeneralJournal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GeneralJournal"
                        }
                    }
                },
                "description": "General Journal to be added",
                "required": true
            },
            "GeneralLedgerTransaction": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GeneralLedgerTransaction"
                        }
                    }
                },
                "description": "General Ledger Transaction to be added",
                "required": true
            },
            "TrialBalance": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TrialBalance"
                        }
                    }
                },
                "description": "Trial Balance to be added",
                "required": true
            },
            "BillSubledger": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BillSubledger"
                        }
                    }
                },
                "description": "Bill Subledger to be added",
                "required": true
            },
            "Customer": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Customer"
                        }
                    }
                },
                "description": "Customer to be added",
                "required": true
            },
            "Receivable": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Receivable"
                        }
                    }
                },
                "description": "Receivable to be added",
                "required": true
            },
            "Invoice": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Invoice"
                        }
                    }
                },
                "description": "Invoice to be added",
                "required": true
            },
            "CreditMemo": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreditMemo"
                        }
                    }
                },
                "description": "Credit Memo to be added",
                "required": true
            },
            "AccountsReceivable": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountsReceivable"
                        }
                    }
                },
                "description": "Accounts Receivable to be added",
                "required": true
            },
            "AccountsReceivableJournal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountsReceivableJournal"
                        }
                    }
                },
                "description": "Accounts Receivable Journal to be added",
                "required": true
            },
            "SalesOrder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SalesOrder"
                        }
                    }
                },
                "description": "Sales Order to be added",
                "required": true
            },
            "SalesJournal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SalesJournal"
                        }
                    }
                },
                "description": "Sales Journal to be added",
                "required": true
            },
            "SalesReturnJournal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SalesReturnJournal"
                        }
                    }
                },
                "description": "Sales Return Journal to be added",
                "required": true
            },
            "AmazonProduct": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AmazonProduct"
                        }
                    }
                },
                "description": "Amazon Product to be added",
                "required": true
            },
            "Frame": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Frame"
                        }
                    }
                },
                "description": "Frame to be added",
                "required": true
            },
            "Seat": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Seat"
                        }
                    }
                },
                "description": "Seat to be added",
                "required": true
            },
            "Bicycle": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Bicycle"
                        }
                    }
                },
                "description": "Bicycle to be added",
                "required": true
            },
            "Vendor": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Vendor"
                        }
                    }
                },
                "description": "Vendor to be added",
                "required": true
            },
            "AccountsPayable": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountsPayable"
                        }
                    }
                },
                "description": "Accounts Payable to be added",
                "required": true
            },
            "AccountsPayableJournal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountsPayableJournal"
                        }
                    }
                },
                "description": "Accounts Payable Journal to be added",
                "required": true
            },
            "InventoryTransaction": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InventoryTransaction"
                        }
                    }
                },
                "description": "Inventory Transaction to be added",
                "required": true
            },
            "InventoryJournal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InventoryJournal"
                        }
                    }
                },
                "description": "Inventory Journal to be added",
                "required": true
            },
            "Wheel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Wheel"
                        }
                    }
                },
                "description": "Wheel to be added",
                "required": true
            }
        }
    }
}