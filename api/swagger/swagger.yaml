swagger: "2.0"
info:
  version: "0.0.1"
  title: Featherbone data service
  license: 
    name: GPLv3
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: data
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /favicon.ico:
    x-swagger-router-controller: data
    get:
      description: Placeholder for chrome. Returns nothing for now
      # used as the method name of the controller
      operationId: favicon
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FaviconResponse"
  /contact/{id}:
    x-swagger-router-controller: data
    get:
      summary: Info for a specific contact
      operationId: request
      parameters:
        - name: id
          in: path
          description: The id of the contact to retrieve
          type: string
      responses:
        200:
          description: Expected response to a valid request
          schema:
            $ref: "#/definitions/Contact"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /contacts:
    x-swagger-router-controller: data
    get:
      description: Contact data
      operationId: request
      parameters:
        - name: limit
          in: query
          description: How many items to return
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Array of contacts
          schema:
            $ref: "#/definitions/Contacts"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lead/{id}:
    x-swagger-router-controller: data
    get:
      summary: Info for a specific lead
      operationId: request
      parameters:
        - name: id
          in: path
          description: The id of the lead to retrieve
          type: string
      responses:
        200:
          description: Expected response to a valid request
          schema:
            $ref: "#/definitions/Lead"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /leads:
    x-swagger-router-controller: data
    get:
      description: Lead data
      # used as the method name of the controller
      operationId: request
      parameters:
        - name: limit
          in: query
          description: How many items to return
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Array of leads
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Leads"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  FaviconResponse:
    required:
      - message
    properties:
      message:
        type: string
  Object:
    description: Abstract object class from which all models will inherit
    discriminator: objectType
    properties: 
      created: 
        default: now()
        description: Create time of the record
        type: string
      createdBy: 
        default: getCurrentUser()
        description: User who created the record
        type: string
      id: 
        default: createId()
        description: Surrogate key
        type: string
      isDeleted: 
        default: false
        description: Indicates the record is no longer active
        type: boolean
      updated: 
        default: now()
        description: Last time the record was updated
        type: string
      updatedBy: 
        default: getCurrentUser()
        description: User who created the record
        type: string
      objectType:
        default: Object
        description: Discriminator
        type: string
    required:
    - id
    - objectType
  Address:
    allOf:
    - $ref: "#/definitions/Object"
    - properties:
        type:
          type: string
        line1:
          type: string
        line2:
          type: string
        line3:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
  Contact:
    allOf:
    - $ref: "#/definitions/Document"
    - properties:
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        addresses:
          type: array
          items:
            $ref: "#/definitions/ContactAddress"
  ContactAddress:
    allOf:
    - $ref: "#/definitions/Object"
    - properties:
        address:
          type: object
          items:
            $ref: "#/definitions/Address"
  Contacts:
    type: array
    items:
      $ref: "#/definitions/Contact"
  Document:
    description: Base document class
    allOf:
    - $ref: "#/definitions/Object"
    - properties:
        owner: 
          description: Owner of the document
          type: string
          default: getCurrentUser()
        etag: 
          description: Optimistic locking key
          type: string
          default: createId()
        notes:
          type: array
          items:
            $ref: "#/definitions/Note"
  Lead:
    allOf:
    - $ref: "#/definitions/Contact"
    - properties:
        company:
          description: Company,
          type: string
        remarks:
          description: Misc. text,
          type: string
        probability:
          description: Probability of closing,
          type: number
  Leads:
    type: array
    items:
      $ref: "#/definitions/Lead"
  Note:
    allOf:
    - $ref: "#/definitions/Object"
    - properties:
        text:
          type: string
