{
	"openapi": "3.0.0",
	"info": {
		"version": "1.0.2",
		"title": "Featherbone data service",
		"description": "REST data service for featherbone based applications.",
		"license": {
			"name": "Affero GPLv3",
			"url": "http://www.gnu.org/licenses/agpl.txt"
		}
	},
	"servers": [{
		"url": "http://localhost:10001"
	}],
	"tags": [{
			"name": "feather",
			"description": "Data class specifications"
		},
		{
			"name": "lock",
			"description": "Lock and unlock methods"
		},
		{
			"name": "module",
			"description": "Javascript client code module"
		},
		{
			"name": "settings",
			"description": "Application settings"
		},
		{
			"name": "subscribe",
			"description": "Subscribe to change events"
		},
		{
			"name": "workbook",
			"description": "Workbook UI layout configuration"
		}
	],
	"paths": {
		"/feather/{name}": {
			"get": {
				"summary": "Get feather by name",
				"operationId": "getFeather",
				"tags": [
					"feather"
				],
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "The name of the feather to retrieve",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Feather"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"feather"
				],
				"summary": "Save feather",
				"operationId": "saveFeather",
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "The name of the feather",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
                "requestBody": {
                  "$ref": "#/components/requestBodies/Feather"
                },
				"responses": {
					"204": {
						"description": "Expected response to a valid request"
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"feather"
				],
				"summary": "Delete feather",
				"operationId": "deleteFeather",
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "Delete a feather",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/do/lock": {
			"post": {
				"summary": "Obtain a lock on an object for a session",
				"operationId": "doLock",
				"tags": [
					"lock"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "Object id to lock",
					"required": true,
					"schema": {
						"type": "string"
					}
				}, {
					"name": "sessionId",
					"in": "query",
					"description": "Session id",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Response of 'true' indicates successful lock",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
				}
			}
		},
		"/do/unlock": {
			"post": {
				"summary": "Unlock an object",
				"operationId": "doUnlock",
				"tags": [
					"lock"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "Object id to unlock",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Record id(s) successfully unlocked",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
                                    "items": {
										"type": "object",
                                        "properties": {
                                            "id": {
                                                "description": "Object id",
                                                "type": "string"
                                            }
                                        }
									}
								}
							}
						}
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
				}
			}
		},
		"/module/": {
			"get": {
				"summary": "Get javascript modules",
				"operationId": "getModules",
				"tags": [
					"module"
				],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Module"
									}
								}
							}
						}
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
				}
			}
		},
		"/settings/{name}": {
			"get": {
				"summary": "Get settings by name",
				"operationId": "getSettings",
				"tags": [
					"settings"
				],
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "The name of the settings to retrieve",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"settings"
				],
				"summary": "Save new settings",
				"operationId": "saveSettings",
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "The name of the settings",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
                "requestBody": {
                  "$ref": "#/components/requestBodies/Settings"
                },
				"responses": {
					"204": {
						"description": "Expected response to a valid request"
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/do/subscribe": {
			"post": {
				"summary": "Subscribe to change events on an object",
				"operationId": "doSubscribe",
				"tags": [
					"subscribe"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "Object id to subscribe to",
					"required": true,
					"schema": {
						"type": "string"
					}
				}, {
					"name": "subscription",
					"in": "query",
					"description": "Subscription information",
					"required": true,
					"schema": {
						"type": "object",
                        "properties": {
                            "id": {
                                "description": "Subscription id",
                                "type": "string"
                            },
                            "sessionId": {
                                "description": "Client session id",
                                "type": "string"
                            }
                        }
					}
				}],
				"responses": {
					"200": {
						"description": "Response of 'true' indicates successful request",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
				}
			}
		},
		"/do/unsubscribe": {
			"post": {
				"summary": "Unsubscribe to change events for a subscription",
				"operationId": "doUnsubscribe",
				"tags": [
					"subscribe"
				],
				"parameters": [{
					"name": "subscription",
					"in": "query",
					"description": "Subscription information",
					"required": true,
					"schema": {
						"type": "object",
                        "properties": {
                            "id": {
                                "description": "Subscription id",
                                "type": "string"
                            }
                        }
					}
				}],
				"responses": {
					"200": {
						"description": "Response of 'true' indicates successful request",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
				}
			}
		},
		"/workbook/{name}": {
			"get": {
				"summary": "Get workbook by name",
				"operationId": "getWorkbook",
				"tags": [
					"workbook"
				],
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "The name of the workbook to retrieve",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Workbook"
								}
							}
						}
					},
					"404": {
						"description": "Workbook not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"workbook"
				],
				"summary": "Save Workbook",
				"operationId": "saveWorkbook",
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "The name of the workbook",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
                "requestBody": {
                  "$ref": "#/components/requestBodies/Workbook"
                },
				"responses": {
					"204": {
						"description": "Expected response to a valid request"
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"workbook"
				],
				"summary": "Delete workbook",
				"operationId": "deleteWorkbook",
				"parameters": [{
					"name": "name",
					"in": "path",
					"description": "Delete a workbook",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/workbooks/": {
			"get": {
				"summary": "Get all workbooks",
				"operationId": "getWorkbooks",
				"tags": [
					"workbook"
				],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Workbook"
									}
								}
							}
						}
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
				}
			}
		}
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Feather": {
                "description": "Feather definition",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier",
                        "type": "string"
                    },
                    "name": {
                        "description": "Feather name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Feather description",
                        "type": "string"
                    },
                    "plural": {
                        "description": "Plural",
                        "type": "string"
                    },
                    "module": {
                        "description": "Module",
                        "type": "string"
                    },
                    "authorization": {
                        "description": "Module",
                        "type": "object"
                    },
                    "inherits": {
                        "description": "Inherits",
                        "type": "string",
                        "default": "Object"
                    },
                    "isSystem": {
                        "description": "System flag",
                        "type": "boolean",
                        "default": false
                    },
                    "isChild": {
                        "description": "Indicates feather always a child of another record",
                        "type": "boolean",
                        "default": false
                    }, 
                    "overloads": {
                        "description": "Property overloads",
                        "type": "object"
                    },
                    "isFetchOnStartup": {
                        "description": "Load all records of this type into the catalog",
                        "type": "boolean",
                        "default": false
                    },
                    "isReadOnly": {
                        "description": "Record can not be edited by the client ",
                        "type": "boolean",
                        "default": false
                    },
                    "properties": {
                        "description": "Properties or columns of the feather",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeatherProperty"
                        }
                    }
                }
            },
            "FeatherProperty": {
                "description": "Feather property definition",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "alias": {
                        "description": "Alternate name for property",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type",
                        "type": "object"
                    },
                    "format": {
                        "description": "Data format",
                        "type": "string"
                    },
                    "scale": {
                        "description": "Numeric scale",
                        "type": "number",
                        "default": -1
                    },
                    "precision": {
                        "description": "Numeric precision",
                        "type": "number",
                        "default": -1
                    },
                    "min": {
                        "description": "Numeric minimum",
                        "type": "number"
                    },
                    "max": {
                        "description": "Numeric maximum",
                        "type": "number"
                    },
                    "default": {
                        "description": "Default",
                        "type": "object"
                    },
                    "autonumber": {
                        "description": "Type",
                        "type": "object"
                    },
                    "isReadOnly": {
                        "description": "Ready only flag",
                        "type": "boolean",
                        "default": false
                    },
                    "isRequired": {
                        "description": "Required flag",
                        "type": "boolean",
                        "default": false
                    },
                    "isUnique": {
                        "description": "Unique flag",
                        "type": "boolean",
                        "default": false
                    },
                    "inheritedFrom": {
                        "description": "Inherited source table",
                        "type": "string"
                    },
                    "dataList": {
                        "description": "Array of input values",
                        "type": "string"
                    },
                    "isIndexed": {
                        "description": "Flag whether to index property",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "JSONPatch": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": [
                        "op",
                        "path",
                        "value"
                    ],
                    "properties": {
                        "op": {
                            "description": "Operation",
                            "type": "string",
                            "enum": [
                                "add",
                                "replace",
                                "remove",
                                "move",
                                "copy",
                                "test"
                            ]
                        },
                        "path": {
                            "description": "Object path i.e. /cost/amount",
                            "type": "string"
                        },
                        "value": {
                            "description": "Value",
                            "type": "object",
                            "oneOf": [{
                                    "type": "string"
                                }, {
                                    "type": "integer"
                                }, {
                                    "type": "number"
                                }, {
                                    "type": "boolean"
                            }]
                        }
                    }
                }
            },
            "Module": {
                "description": "Generic definition for module",
                "properties": {
                    "name": {
                        "description": "Module name",
                        "type": "string"
                    },
                    "script": {
                        "description": "Client side javascript",
                        "type": "string"
                    },
                    "version": {
                        "description": "Module version",
                        "type": "string"
                    },
                    "dependencies": {
                        "description": "Module dependencies",
                        "type": "object"
                    },
                    "isActive": {
                        "description": "Active flag",
                        "type": "boolean"
                    }
                }
            },
            "Settings": {
                "description": "Generic definition for settings",
                "properties": {
                    "etag": {
                        "description": "Version for pessemistic locking",
                        "type": "string"
                    },
                    "data": {
                        "description": "Settings data",
                        "type": "object"
                    }
                }
            },
            "Workbook": {
                "description": "Generic definition for workbook",
                "properties": {
                    "name": {
                        "description": "Workbook name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "module": {
                        "description": "Module reference",
                        "type": "string"
                    },
                    "launchConfig": {
                        "description": "Workbook menu configuration",
                        "type": "object"
                    },
                    "defaultConfig": {
                        "description": "Default workbook page configuration",
                        "type": "object"
                    },
                    "localConfig": {
                        "description": "Workbook configuration altered and shared by users",
                        "type": "object"
                    }
                }
            }
        },
        "requestBodies": {
            "Feather": {
                "content": {
                  "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/Feather"
                    }
                  }
                },
                "description": "Feather to be saved",
                "required": true
            },
            "JSONPatch": {
                "content": {
                  "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/JSONPatch"
                    }
                  }
                },
                "description": "JSON Patch (RFC 6902)",
                "required": true
            },
            "Settings": {
                "content": {
                  "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/Settings"
                    }
                  }
                },
                "description": "Settings to be saved",
                "required": true
            },
            "Workbook": {
                "content": {
                  "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/Workbook"
                    }
                  }
                },
                "description": "Workbook to be saved",
                "required": true
            },
            "Query": {
                "description": "Complex parameters",
                "required": false,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "showDeleted": {
                                    "description": "Flag whether to show deleted records",
                                    "type": "boolean",
                                    "default": false
                                },
                                "subscription": {
                                    "type": "object",
                                    "description": "Subscription to auto subscribe to results",
                                    "required": [
                                        "id",
                                        "sessionId"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Subscription id",
                                            "type": "string"
                                        },
                                        "sessionId": {
                                            "description": "Client session id",
                                            "type": "string"
                                        },
                                        "merge": {
                                            "description": "Add results to prexisting subscription with matching id",
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "filter": {
                                    "description": "Define which objects and how to present",
                                    "type": "object",
                                    "properties": {
                                        "criteria": {
                                            "description": "filter criteria",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "property",
                                                    "value"
                                                ],
                                                "properties": {
                                                    "property": {
                                                        "description": "Property to filter on. Dot notation for relations supported",
                                                        "type": "string"
                                                    },
                                                    "operator": {
                                                        "description": "Operator",
                                                        "type": "string",
                                                        "enum": [
                                                            "=",
                                                            "!=",
                                                            "~",
                                                            "!~",
                                                            "<",
                                                            ">",
                                                            "<=",
                                                            ">=",
                                                            "IN"
                                                        ],
                                                        "default": "="
                                                    },
                                                    "value": {
                                                        "description": "Value to filter for",
                                                        "type": "object",
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "type": "number"
                                                            },
                                                            {
                                                                "type": "object"
                                                            },
                                                            {
                                                                "type": "boolean"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "sort": {
                                            "description": "Sort order",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "property"
                                                ],
                                                "properties": {
                                                    "property": {
                                                        "description": "Property to sort on",
                                                        "type": "string"
                                                    },
                                                    "order": {
                                                        "description": "Direction to sort on",
                                                        "type": "string",
                                                        "enum": [
                                                            "ASC",
                                                            "DESC"
                                                        ],
                                                        "default": "ASC"
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "description": "Offset from first item",
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "limit": {
                                            "description": "How many objects to return",
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}